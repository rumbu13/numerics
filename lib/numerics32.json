[
 {
  "name" : "numerics.internal.arrays",
  "kind" : "module",
  "file" : "numerics\\internal\\arrays.d",
  "comment" : " Array functions\n\n Copyright: Copyright Răzvan Ștefănescu 2016.\n License:   $(WEB www.boost.org/LICENSE_1_0.txt, Boost License 1.0).\n Authors:   Răzvan Ștefănescu\n Source:    $(NUMERICSSRC internal/arrays.d)\n",
  "members" : [
   {
    "name" : "numerics.internal.integrals",
    "kind" : "import",
    "line" : 11,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "ispow2",
    "kind" : "alias",
    "line" : 13,
    "char" : 1
   },
   {
    "name" : "clz",
    "kind" : "alias",
    "line" : 14,
    "char" : 1
   },
   {
    "name" : "ctz",
    "kind" : "alias",
    "line" : 15,
    "char" : 1
   },
   {
    "name" : "ZERO_BITS",
    "kind" : "variable",
    "line" : 18,
    "char" : 6,
    "storageClass" : [
     "enum"
    ],
    "deco" : "k",
    "init" : "0u"
   },
   {
    "name" : "ONE_BITS",
    "kind" : "variable",
    "line" : 19,
    "char" : 6,
    "storageClass" : [
     "enum"
    ],
    "deco" : "k",
    "init" : "4294967295u"
   },
   {
    "name" : "SIGN_BITS",
    "kind" : "variable",
    "line" : 20,
    "char" : 6,
    "storageClass" : [
     "enum"
    ],
    "deco" : "k",
    "init" : "2147483648u"
   },
   {
    "name" : "all_generic",
    "kind" : "function",
    "protection" : "private",
    "line" : 24,
    "char" : 14,
    "deco" : "FNaNbNiNfAxkxkZb",
    "originalType" : "pure nothrow @nogc @safe bool(const(uint)[] x, const uint y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 30,
    "endchar" : 1
   },
   {
    "name" : "all",
    "kind" : "function",
    "line" : 33,
    "char" : 6,
    "deco" : "FNaNbNiNfAxkxkZb",
    "originalType" : "pure nothrow @nogc @safe bool(const(uint)[] x, const uint y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 75,
    "endchar" : 1
   },
   {
    "name" : "mov",
    "kind" : "function",
    "comment" : "x = y;\n",
    "line" : 79,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxkZv",
    "originalType" : "pure nothrow @nogc @safe void(uint[] x, const uint y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 84,
    "endchar" : 1
   },
   {
    "name" : "movs",
    "kind" : "function",
    "comment" : "x = y;\n",
    "line" : 89,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxiZv",
    "originalType" : "pure nothrow @nogc @safe void(uint[] x, const int y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xi"
     }
    ],
    "endline" : 94,
    "endchar" : 1
   },
   {
    "name" : "mov",
    "kind" : "function",
    "comment" : "x = y\n",
    "line" : 98,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxmZv",
    "originalType" : "pure nothrow @nogc @safe void(uint[] x, const ulong y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xm"
     }
    ],
    "endline" : 104,
    "endchar" : 1
   },
   {
    "name" : "movs",
    "kind" : "function",
    "line" : 107,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxlZv",
    "originalType" : "pure nothrow @nogc @safe void(uint[] x, const long y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xl"
     }
    ],
    "endline" : 113,
    "endchar" : 1
   },
   {
    "name" : "mov",
    "kind" : "function",
    "comment" : "x = y;\n",
    "line" : 117,
    "char" : 6,
    "deco" : "FNaNbNiNfAkAxkZv",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "Axk"
     }
    ],
    "endline" : 122,
    "endchar" : 1
   },
   {
    "name" : "movs",
    "kind" : "function",
    "comment" : "x = y;\n",
    "line" : 126,
    "char" : 6,
    "deco" : "FNaNbNiNfAkAxkZv",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "Axk"
     }
    ],
    "endline" : 131,
    "endchar" : 1
   },
   {
    "name" : "equuu",
    "kind" : "function",
    "comment" : "x == y\n",
    "line" : 135,
    "char" : 6,
    "deco" : "FNaNbNiNfAxkxkZb",
    "originalType" : "pure nothrow @nogc @safe bool(const(uint)[] x, const uint y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 143,
    "endchar" : 1
   },
   {
    "name" : "equuu",
    "kind" : "function",
    "comment" : "x == y\n",
    "line" : 147,
    "char" : 6,
    "deco" : "FNaNbNiNfAxkxmZb",
    "originalType" : "pure nothrow @nogc @safe bool(const(uint)[] x, const ulong y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "xm"
     }
    ],
    "endline" : 157,
    "endchar" : 1
   },
   {
    "name" : "equuu",
    "kind" : "function",
    "comment" : "x == y\n",
    "line" : 161,
    "char" : 6,
    "deco" : "FNaNbNiNfAxkAxkZb",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "Axk"
     }
    ],
    "endline" : 169,
    "endchar" : 1
   },
   {
    "name" : "equss",
    "kind" : "function",
    "comment" : "x == y\n",
    "line" : 173,
    "char" : 6,
    "deco" : "FNaNbNiNfAxkxiZb",
    "originalType" : "pure nothrow @nogc @safe bool(const(uint)[] x, const int y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "xi"
     }
    ],
    "endline" : 181,
    "endchar" : 1
   },
   {
    "name" : "equss",
    "kind" : "function",
    "comment" : "x == y\n",
    "line" : 185,
    "char" : 6,
    "deco" : "FNaNbNiNfAxkxlZb",
    "originalType" : "pure nothrow @nogc @safe bool(const(uint)[] x, const long y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "xl"
     }
    ],
    "endline" : 195,
    "endchar" : 1
   },
   {
    "name" : "equss",
    "kind" : "function",
    "comment" : "x == y\n",
    "line" : 199,
    "char" : 6,
    "deco" : "FNaNbNiNfAxkAxkZb",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "Axk"
     }
    ],
    "endline" : 214,
    "endchar" : 1
   },
   {
    "name" : "equus",
    "kind" : "function",
    "comment" : "x == y\n",
    "line" : 218,
    "char" : 6,
    "deco" : "FNaNbNiNfAxkxiZb",
    "originalType" : "pure nothrow @nogc @safe bool(const(uint)[] x, const int y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "xi"
     }
    ],
    "endline" : 221,
    "endchar" : 1
   },
   {
    "name" : "equus",
    "kind" : "function",
    "comment" : "x == y\n",
    "line" : 225,
    "char" : 6,
    "deco" : "FNaNbNiNfAxkxlZb",
    "originalType" : "pure nothrow @nogc @safe bool(const(uint)[] x, const long y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "xl"
     }
    ],
    "endline" : 228,
    "endchar" : 1
   },
   {
    "name" : "equus",
    "kind" : "function",
    "comment" : "x == y\n",
    "line" : 232,
    "char" : 6,
    "deco" : "FNaNbNiNfAxkAxkZb",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "Axk"
     }
    ],
    "endline" : 235,
    "endchar" : 1
   },
   {
    "name" : "equsu",
    "kind" : "function",
    "comment" : "x == y\n",
    "line" : 239,
    "char" : 6,
    "deco" : "FNaNbNiNfAxkxkZb",
    "originalType" : "pure nothrow @nogc @safe bool(const(uint)[] x, const uint y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 242,
    "endchar" : 1
   },
   {
    "name" : "equsu",
    "kind" : "function",
    "comment" : "x == y\n",
    "line" : 246,
    "char" : 6,
    "deco" : "FNaNbNiNfAxkxmZb",
    "originalType" : "pure nothrow @nogc @safe bool(const(uint)[] x, const ulong y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "xm"
     }
    ],
    "endline" : 249,
    "endchar" : 1
   },
   {
    "name" : "equsu",
    "kind" : "function",
    "comment" : "x == y\n",
    "line" : 253,
    "char" : 6,
    "deco" : "FNaNbNiNfAxkAxkZb",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "Axk"
     }
    ],
    "endline" : 256,
    "endchar" : 1
   },
   {
    "name" : "cmpuu",
    "kind" : "function",
    "comment" : "x ? y\n",
    "line" : 260,
    "char" : 5,
    "deco" : "FNaNbNiNfAxkxkZi",
    "originalType" : "pure nothrow @nogc @safe int(const(uint)[] x, const uint y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 271,
    "endchar" : 1
   },
   {
    "name" : "cmpuu",
    "kind" : "function",
    "comment" : "x ? y\n",
    "line" : 275,
    "char" : 5,
    "deco" : "FNaNbNiNfAxkxmZi",
    "originalType" : "pure nothrow @nogc @safe int(const(uint)[] x, const ulong y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "xm"
     }
    ],
    "endline" : 287,
    "endchar" : 1
   },
   {
    "name" : "cmpuu",
    "kind" : "function",
    "comment" : "x ? y\n",
    "line" : 291,
    "char" : 5,
    "deco" : "FNaNbNiNfAxkAxkZi",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "Axk"
     }
    ],
    "endline" : 306,
    "endchar" : 1
   },
   {
    "name" : "cmpss",
    "kind" : "function",
    "comment" : "x ? y\n",
    "line" : 310,
    "char" : 5,
    "deco" : "FNaNbNiNfAxkxiZi",
    "originalType" : "pure nothrow @nogc @safe int(const(uint)[] x, const int y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "xi"
     }
    ],
    "endline" : 341,
    "endchar" : 1
   },
   {
    "name" : "cmpss",
    "kind" : "function",
    "comment" : "x ? y\n",
    "line" : 345,
    "char" : 5,
    "deco" : "FNaNbNiNfAxkxlZi",
    "originalType" : "pure nothrow @nogc @safe int(const(uint)[] x, const long y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "xl"
     }
    ],
    "endline" : 382,
    "endchar" : 1
   },
   {
    "name" : "cmpss",
    "kind" : "function",
    "comment" : "x ? y\n",
    "line" : 386,
    "char" : 5,
    "deco" : "FNaNbNiNfAxkAxkZi",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "Axk"
     }
    ],
    "endline" : 408,
    "endchar" : 1
   },
   {
    "name" : "cmpus",
    "kind" : "function",
    "comment" : "x ? y\n",
    "line" : 412,
    "char" : 5,
    "deco" : "FNaNbNiNfAxkxiZi",
    "originalType" : "pure nothrow @nogc @safe int(const(uint)[] x, const int y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "xi"
     }
    ],
    "endline" : 418,
    "endchar" : 1
   },
   {
    "name" : "cmpus",
    "kind" : "function",
    "comment" : "x ? y\n",
    "line" : 422,
    "char" : 5,
    "deco" : "FNaNbNiNfAxkxlZi",
    "originalType" : "pure nothrow @nogc @safe int(const(uint)[] x, const long y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "xl"
     }
    ],
    "endline" : 428,
    "endchar" : 1
   },
   {
    "name" : "cmpus",
    "kind" : "function",
    "comment" : "x ? y\n",
    "line" : 433,
    "char" : 5,
    "deco" : "FNaNbNiNfAxkAxkZi",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "Axk"
     }
    ],
    "endline" : 439,
    "endchar" : 1
   },
   {
    "name" : "cmpsu",
    "kind" : "function",
    "comment" : "x ? y\n",
    "line" : 443,
    "char" : 5,
    "deco" : "FNaNbNiNfAxkxkZi",
    "originalType" : "pure nothrow @nogc @safe int(const(uint)[] x, const uint y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 449,
    "endchar" : 1
   },
   {
    "name" : "cmpsu",
    "kind" : "function",
    "comment" : "x ? y\n",
    "line" : 453,
    "char" : 5,
    "deco" : "FNaNbNiNfAxkxmZi",
    "originalType" : "pure nothrow @nogc @safe int(const(uint)[] x, const ulong y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "xm"
     }
    ],
    "endline" : 459,
    "endchar" : 1
   },
   {
    "name" : "cmpsu",
    "kind" : "function",
    "comment" : "x ? y\n",
    "line" : 463,
    "char" : 5,
    "deco" : "FNaNbNiNfAxkAxkZi",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "Axk"
     }
    ],
    "endline" : 469,
    "endchar" : 1
   },
   {
    "name" : "or",
    "kind" : "function",
    "line" : 474,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxkZv",
    "originalType" : "pure nothrow @nogc @safe void(uint[] x, const uint y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 478,
    "endchar" : 1
   },
   {
    "name" : "or",
    "kind" : "function",
    "line" : 483,
    "char" : 6,
    "deco" : "FNaNbNiNfAkAxkxkZv",
    "originalType" : "pure nothrow @nogc @safe void(uint[] z, const(uint)[] x, const uint y)",
    "parameters" : [
     {
      "name" : "z",
      "deco" : "Ak"
     },
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 489,
    "endchar" : 1
   },
   {
    "name" : "or",
    "kind" : "function",
    "line" : 494,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxmZv",
    "originalType" : "pure nothrow @nogc @safe void(uint[] x, const ulong y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xm"
     }
    ],
    "endline" : 499,
    "endchar" : 1
   },
   {
    "name" : "or",
    "kind" : "function",
    "line" : 505,
    "char" : 6,
    "deco" : "FNaNbNiNfAkAxkZv",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "Axk"
     }
    ],
    "endline" : 509,
    "endchar" : 1
   },
   {
    "name" : "ors",
    "kind" : "function",
    "line" : 514,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxiZv",
    "originalType" : "pure nothrow @nogc @safe void(uint[] x, const int y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xi"
     }
    ],
    "endline" : 520,
    "endchar" : 1
   },
   {
    "name" : "ors",
    "kind" : "function",
    "line" : 525,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxlZv",
    "originalType" : "pure nothrow @nogc @safe void(uint[] x, const long y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xl"
     }
    ],
    "endline" : 532,
    "endchar" : 1
   },
   {
    "name" : "ors",
    "kind" : "function",
    "line" : 537,
    "char" : 6,
    "deco" : "FNaNbNiNfAkAxkZv",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "Axk"
     }
    ],
    "endline" : 543,
    "endchar" : 1
   },
   {
    "name" : "and",
    "kind" : "function",
    "line" : 548,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxkZv",
    "originalType" : "pure nothrow @nogc @safe void(uint[] x, const uint y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 553,
    "endchar" : 1
   },
   {
    "name" : "and",
    "kind" : "function",
    "line" : 558,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxmZv",
    "originalType" : "pure nothrow @nogc @safe void(uint[] x, const ulong y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xm"
     }
    ],
    "endline" : 564,
    "endchar" : 1
   },
   {
    "name" : "and",
    "kind" : "function",
    "line" : 569,
    "char" : 6,
    "deco" : "FNaNbNiNfAkAxkZv",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "Axk"
     }
    ],
    "endline" : 574,
    "endchar" : 1
   },
   {
    "name" : "ands",
    "kind" : "function",
    "line" : 579,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxiZv",
    "originalType" : "pure nothrow @nogc @safe void(uint[] x, const int y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xi"
     }
    ],
    "endline" : 585,
    "endchar" : 1
   },
   {
    "name" : "ands",
    "kind" : "function",
    "line" : 590,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxlZv",
    "originalType" : "pure nothrow @nogc @safe void(uint[] x, const long y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xl"
     }
    ],
    "endline" : 597,
    "endchar" : 1
   },
   {
    "name" : "ands",
    "kind" : "function",
    "line" : 602,
    "char" : 6,
    "deco" : "FNaNbNiNfAkAxkZv",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "Axk"
     }
    ],
    "endline" : 608,
    "endchar" : 1
   },
   {
    "name" : "xor",
    "kind" : "function",
    "line" : 613,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxkZv",
    "originalType" : "pure nothrow @nogc @safe void(uint[] x, const uint y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 617,
    "endchar" : 1
   },
   {
    "name" : "xor",
    "kind" : "function",
    "line" : 622,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxmZv",
    "originalType" : "pure nothrow @nogc @safe void(uint[] x, const ulong y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xm"
     }
    ],
    "endline" : 627,
    "endchar" : 1
   },
   {
    "name" : "xor",
    "kind" : "function",
    "line" : 632,
    "char" : 6,
    "deco" : "FNaNbNiNfAkAxkZv",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "Axk"
     }
    ],
    "endline" : 636,
    "endchar" : 1
   },
   {
    "name" : "xors",
    "kind" : "function",
    "line" : 641,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxiZv",
    "originalType" : "pure nothrow @nogc @safe void(uint[] x, const int y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xi"
     }
    ],
    "endline" : 647,
    "endchar" : 1
   },
   {
    "name" : "xors",
    "kind" : "function",
    "line" : 652,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxlZv",
    "originalType" : "pure nothrow @nogc @safe void(uint[] x, const long y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xl"
     }
    ],
    "endline" : 659,
    "endchar" : 1
   },
   {
    "name" : "xors",
    "kind" : "function",
    "line" : 664,
    "char" : 6,
    "deco" : "FNaNbNiNfAkAxkZv",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "Axk"
     }
    ],
    "endline" : 670,
    "endchar" : 1
   },
   {
    "name" : "not",
    "kind" : "function",
    "line" : 674,
    "char" : 6,
    "deco" : "FNaNbNiNfAkZv",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     }
    ],
    "endline" : 677,
    "endchar" : 1
   },
   {
    "name" : "inc",
    "kind" : "function",
    "line" : 681,
    "char" : 6,
    "deco" : "FNaNbNiNfAkZk",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     }
    ],
    "endline" : 720,
    "endchar" : 1
   },
   {
    "name" : "dec",
    "kind" : "function",
    "line" : 723,
    "char" : 6,
    "deco" : "FNaNbNiNfAkZk",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     }
    ],
    "endline" : 763,
    "endchar" : 1
   },
   {
    "name" : "neg",
    "kind" : "function",
    "line" : 766,
    "char" : 6,
    "deco" : "FNaNbNiNfAkZv",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     }
    ],
    "endline" : 817,
    "endchar" : 1
   },
   {
    "name" : "add",
    "kind" : "function",
    "comment" : "x += y\n",
    "line" : 821,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxkZk",
    "originalType" : "pure nothrow @nogc @safe uint(uint[] x, const uint y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 826,
    "endchar" : 1
   },
   {
    "name" : "add",
    "kind" : "function",
    "comment" : "x += y\n",
    "line" : 831,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxmZk",
    "originalType" : "pure nothrow @nogc @safe uint(uint[] x, const ulong y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xm"
     }
    ],
    "endline" : 839,
    "endchar" : 1
   },
   {
    "name" : "add",
    "kind" : "function",
    "comment" : "x += y\n",
    "line" : 843,
    "char" : 6,
    "deco" : "FNaNbNiNfAkAxkZk",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "Axk"
     }
    ],
    "endline" : 919,
    "endchar" : 1
   },
   {
    "name" : "sub",
    "kind" : "function",
    "comment" : "x -= y\n",
    "line" : 923,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxkZk",
    "originalType" : "pure nothrow @nogc @safe uint(uint[] x, const uint y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 929,
    "endchar" : 1
   },
   {
    "name" : "sub",
    "kind" : "function",
    "comment" : "x -= y\n",
    "line" : 934,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxmZk",
    "originalType" : "pure nothrow @nogc @safe uint(uint[] x, const ulong y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xm"
     }
    ],
    "endline" : 943,
    "endchar" : 1
   },
   {
    "name" : "sub",
    "kind" : "function",
    "comment" : "x -= y\n",
    "line" : 947,
    "char" : 6,
    "deco" : "FNaNbNiNfAkAxkZk",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "Axk"
     }
    ],
    "endline" : 1029,
    "endchar" : 1
   },
   {
    "name" : "shl",
    "kind" : "function",
    "comment" : "x <<= y\n",
    "line" : 1033,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxkZv",
    "originalType" : "pure nothrow @nogc @safe void(uint[] x, const size_t y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 1061,
    "endchar" : 1
   },
   {
    "name" : "shr",
    "kind" : "function",
    "comment" : "x >>>= y\n",
    "line" : 1065,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxkZv",
    "originalType" : "pure nothrow @nogc @safe void(uint[] x, const size_t y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 1093,
    "endchar" : 1
   },
   {
    "name" : "sahr",
    "kind" : "function",
    "comment" : "x >>= y\n",
    "line" : 1097,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxkZv",
    "originalType" : "pure nothrow @nogc @safe void(uint[] x, const size_t y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 1127,
    "endchar" : 1
   },
   {
    "name" : "mul_basecase_gen",
    "kind" : "function",
    "comment" : "x *= y\n",
    "line" : 1131,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxkZk",
    "originalType" : "pure nothrow @nogc @safe uint(uint[] x, const uint y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 1141,
    "endchar" : 1
   },
   {
    "name" : "mul_basecase",
    "kind" : "function",
    "comment" : "x *= y\n",
    "line" : 1145,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxkZk",
    "originalType" : "pure nothrow @nogc @safe uint(uint[] x, const uint y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 1198,
    "endchar" : 1
   },
   {
    "name" : "mul",
    "kind" : "function",
    "comment" : "x *= y\n",
    "line" : 1202,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxkZk",
    "originalType" : "pure nothrow @nogc @safe uint(uint[] x, const uint y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 1252,
    "endchar" : 1
   },
   {
    "name" : "mul_basecase",
    "kind" : "function",
    "comment" : "z = x * y\n",
    "line" : 1257,
    "char" : 6,
    "deco" : "FNaNbNiNfAkAxkAxkZv",
    "parameters" : [
     {
      "name" : "z",
      "deco" : "Ak"
     },
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "Axk"
     }
    ],
    "endline" : 1347,
    "endchar" : 1
   },
   {
    "name" : "squ_basecase",
    "kind" : "function",
    "comment" : "z = x^^2\n",
    "line" : 1352,
    "char" : 6,
    "deco" : "FNaNbNiNfAkAxkZv",
    "parameters" : [
     {
      "name" : "z",
      "deco" : "Ak"
     },
     {
      "name" : "x",
      "deco" : "Axk"
     }
    ],
    "endline" : 1371,
    "endchar" : 1
   },
   {
    "name" : "mul",
    "kind" : "function",
    "comment" : "z = x * y\n",
    "line" : 1375,
    "char" : 6,
    "deco" : "FNaNbNiNfAkAxkAxkZv",
    "parameters" : [
     {
      "name" : "z",
      "deco" : "Ak"
     },
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "Axk"
     }
    ],
    "endline" : 1435,
    "endchar" : 1
   },
   {
    "name" : "squ",
    "kind" : "function",
    "comment" : "z = x * y\n",
    "line" : 1440,
    "char" : 6,
    "deco" : "FNaNbNiNfAkAxkZv",
    "parameters" : [
     {
      "name" : "z",
      "deco" : "Ak"
     },
     {
      "name" : "x",
      "deco" : "Axk"
     }
    ],
    "endline" : 1465,
    "endchar" : 1
   },
   {
    "name" : "divrem_basecase",
    "kind" : "function",
    "comment" : "x /= y, returns x % y\n",
    "line" : 1471,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxkZk",
    "originalType" : "pure nothrow @nogc @safe uint(uint[] x, const uint y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 1517,
    "endchar" : 1
   },
   {
    "name" : "rem_basecase",
    "kind" : "function",
    "comment" : "returns x % y\n",
    "line" : 1521,
    "char" : 6,
    "deco" : "FNaNbNiNfAxkxkZk",
    "originalType" : "pure nothrow @nogc @safe uint(const(uint)[] x, const uint y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 1564,
    "endchar" : 1
   },
   {
    "name" : "divrem",
    "kind" : "function",
    "comment" : "x /= y, returns x % y\n",
    "line" : 1568,
    "char" : 6,
    "deco" : "FNaNbNiNfAkxkZk",
    "originalType" : "pure nothrow @nogc @safe uint(uint[] x, const uint y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 1635,
    "endchar" : 1
   },
   {
    "name" : "rem",
    "kind" : "function",
    "comment" : "returns x % y\n",
    "line" : 1640,
    "char" : 6,
    "deco" : "FNaNbNiNfAxkxkZk",
    "originalType" : "pure nothrow @nogc @safe uint(const(uint)[] x, const uint y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 1671,
    "endchar" : 1
   },
   {
    "name" : "divrem_basecase",
    "kind" : "function",
    "comment" : "q = x / y, r = x % y\n",
    "line" : 1676,
    "char" : 6,
    "deco" : "FNaNbNiNfAkAkAxkAxkZv",
    "parameters" : [
     {
      "name" : "q",
      "deco" : "Ak"
     },
     {
      "name" : "r",
      "deco" : "Ak"
     },
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "Axk"
     }
    ],
    "endline" : 1749,
    "endchar" : 1
   },
   {
    "name" : "xmul",
    "kind" : "function",
    "line" : 1755,
    "char" : 7,
    "deco" : "FNaNbNiNfxkxkZm",
    "originalType" : "pure nothrow @nogc @safe ulong(const uint x, const uint y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "xk"
     },
     {
      "name" : "y",
      "deco" : "xk"
     }
    ],
    "endline" : 1770,
    "endchar" : 1
   },
   {
    "name" : "divrem",
    "kind" : "function",
    "comment" : "q = x / y, r = x % y\n",
    "line" : 1774,
    "char" : 6,
    "deco" : "FNaNbNiNfAkAkAxkAxkZv",
    "parameters" : [
     {
      "name" : "q",
      "deco" : "Ak"
     },
     {
      "name" : "r",
      "deco" : "Ak"
     },
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "Axk"
     }
    ],
    "endline" : 1834,
    "endchar" : 1
   },
   {
    "name" : "rem",
    "kind" : "function",
    "comment" : "q = x / y, r = x % y\n",
    "line" : 1838,
    "char" : 6,
    "deco" : "FNaNbNiNfAkAxkAxkZv",
    "parameters" : [
     {
      "name" : "r",
      "deco" : "Ak"
     },
     {
      "name" : "x",
      "deco" : "Axk"
     },
     {
      "name" : "y",
      "deco" : "Axk"
     }
    ],
    "endline" : 1891,
    "endchar" : 1
   },
   {
    "name" : "adjust_division_down",
    "kind" : "function",
    "protection" : "private",
    "line" : 1894,
    "char" : 14,
    "deco" : "FNaNbNiNfAkxAkmZk",
    "originalType" : "pure nothrow @nogc @safe uint(uint[] x, const uint[] y, ulong q)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xAk"
     },
     {
      "name" : "q",
      "deco" : "m"
     }
    ],
    "endline" : 1964,
    "endchar" : 1
   },
   {
    "name" : "adjust_division_up",
    "kind" : "function",
    "protection" : "private",
    "line" : 1967,
    "char" : 14,
    "deco" : "FNaNbNiNfAkxAkZk",
    "originalType" : "pure nothrow @nogc @safe uint(uint[] x, const uint[] y)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Ak"
     },
     {
      "name" : "y",
      "deco" : "xAk"
     }
    ],
    "endline" : 2021,
    "endchar" : 1
   },
   {
    "name" : "used_generic",
    "kind" : "function",
    "protection" : "private",
    "line" : 2024,
    "char" : 16,
    "deco" : "FNaNbNiNfAxkZk",
    "originalType" : "pure nothrow @nogc @safe size_t(const(uint)[] x)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     }
    ],
    "endline" : 2032,
    "endchar" : 1
   },
   {
    "name" : "used",
    "kind" : "function",
    "comment" : "counts non zero elements\n",
    "line" : 2036,
    "char" : 8,
    "deco" : "FNaNbNiNfAxkZk",
    "originalType" : "pure nothrow @nogc @safe size_t(const(uint)[] x)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     }
    ],
    "endline" : 2075,
    "endchar" : 1
   },
   {
    "name" : "ispow2",
    "kind" : "function",
    "comment" : "returns true if x is a power f two\n",
    "line" : 2080,
    "char" : 6,
    "deco" : "FNaNbNiNfAxkZk",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     }
    ],
    "endline" : 2084,
    "endchar" : 1
   },
   {
    "name" : "clz",
    "kind" : "function",
    "comment" : "returns leading zeros of x\n",
    "line" : 2088,
    "char" : 6,
    "storageClass" : [
     "auto"
    ],
    "deco" : "FNaNbNiNfAxkZk",
    "originalType" : "pure nothrow @nogc @safe (const(uint)[] x)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     }
    ],
    "endline" : 2094,
    "endchar" : 1
   },
   {
    "name" : "ctz",
    "kind" : "function",
    "comment" : "returns trailing zeros of x\n",
    "line" : 2098,
    "char" : 6,
    "storageClass" : [
     "auto"
    ],
    "deco" : "FNaNbNiNfAxkZk",
    "originalType" : "pure nothrow @nogc @safe (const(uint)[] x)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     }
    ],
    "endline" : 2104,
    "endchar" : 1
   },
   {
    "name" : "hash",
    "kind" : "function",
    "line" : 2107,
    "char" : 6,
    "deco" : "FNaNbNiNfAxkZk",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "Axk"
     }
    ],
    "endline" : 2115,
    "endchar" : 1
   },
   {
    "name" : "maxPow10",
    "kind" : "variable",
    "line" : 2118,
    "char" : 6,
    "storageClass" : [
     "enum"
    ],
    "deco" : "i",
    "init" : "308"
   },
   {
    "name" : "genPow10",
    "kind" : "function",
    "line" : 2121,
    "char" : 8,
    "deco" : "FZAya",
    "endline" : 2139,
    "endchar" : 1
   },
   {
    "name" : "pow10",
    "kind" : "variable",
    "file" : "numerics\\internal\\arrays.d-mixin-2142",
    "line" : 2142,
    "char" : 39,
    "storageClass" : [
     "static",
     "immutable"
    ],
    "deco" : "yG309Ak",
    "originalType" : "uint[][maxPow10 + 1]",
    "init" : "[[1u], [10u], [100u], [1000u], [10000u], [100000u], [1000000u], [10000000u], [100000000u], [1000000000u], [1410065408u, 2u], [1215752192u, 23u], [3567587328u, 232u], [1316134912u, 2328u], [276447232u, 23283u], [2764472320u, 232830u], [1874919424u, 2328306u], [1569325056u, 23283064u], [2808348672u, 232830643u], [2313682944u, 2328306436u], [1661992960u, 1808227885u, 5u], [3735027712u, 902409669u, 54u], [2990538752u, 434162106u, 542u], [4135583744u, 46653770u, 5421u], [2701131776u, 466537709u, 54210u], [1241513984u, 370409800u, 542101u], [3825205248u, 3704098002u, 5421010u], [3892314112u, 2681241660u, 54210108u], [268435456u, 1042612833u, 542101086u], [2684354560u, 1836193738u, 1126043566u, 1u], [1073741824u, 1182068202u, 2670501072u, 12u], [2147483648u, 3230747430u, 935206946u, 126u], [0u, 2242703233u, 762134875u, 1262u], [0u, 952195850u, 3326381459u, 12621u], [0u, 932023908u, 3199043520u, 126217u], [0u, 730304488u, 1925664130u, 1262177u], [0u, 3008077584u, 2076772117u, 12621774u], [0u, 16004768u, 3587851993u, 126217744u], [0u, 160047680u, 1518781562u, 1262177448u], [0u, 1600476800u, 2302913732u, 4031839891u, 2u], [0u, 3119866112u, 1554300843u, 1663693251u, 29u], [0u, 1133890048u, 2658106549u, 3752030625u, 293u], [0u, 2748965888u, 811261716u, 3160567888u, 2938u], [0u, 1719855104u, 3817649870u, 1540907809u, 29387u], [0u, 18681856u, 3816760336u, 2524176210u, 293873u], [0u, 186818560u, 3807864992u, 3766925628u, 2938735u], [0u, 1868185600u, 3718911552u, 3309517920u, 29387358u], [0u, 1501986816u, 2829377156u, 3030408136u, 293873587u], [0u, 2134966272u, 2523967787u, 239310294u, 2938735877u], [0u, 4169793536u, 3764841394u, 2393102945u, 3617554994u, 6u], [0u, 3043229696u, 3288675581u, 2456192978u, 1815811577u, 68u], [0u, 367525888u, 2821984745u, 3087093307u, 978246591u, 684u], [0u, 3675258880u, 2450043674u, 806162004u, 1192531325u, 6842u], [0u, 2392850432u, 3025600268u, 3766652749u, 3335378659u, 68422u], [0u, 2453667840u, 191231613u, 3306789129u, 3289015526u, 684227u], [0u, 3061841920u, 1912316135u, 3003120218u, 2825384195u, 6842277u], [0u, 553648128u, 1943292173u, 4261398408u, 2484038180u, 68422776u], [0u, 1241513984u, 2253052547u, 3959278420u, 3365545329u, 684227765u], [0u, 3825205248u, 1055688992u, 938078541u, 3590682227u, 2547310361u, 1u], [0u, 3892314112u, 1966955336u, 790850820u, 1547083904u, 3998267138u, 15u], [0u, 268435456u, 2489684185u, 3613540908u, 2585937153u, 1327965719u, 159u], [0u, 2684354560u, 3422005370u, 1775670717u, 89567762u, 394755308u, 1593u], [0u, 1073741824u, 4155282634u, 576837993u, 895677624u, 3947553080u, 15930u], [0u, 2147483648u, 2898120678u, 1473412643u, 366841649u, 820825138u, 159309u], [0u, 0u, 3211403009u, 1849224548u, 3668416493u, 3913284084u, 1593091u], [0u, 0u, 2049259018u, 1312376303u, 2324426566u, 478135184u, 15930919u], [0u, 0u, 3312720996u, 238861146u, 1769429183u, 486384549u, 159309191u], [0u, 0u, 3062438888u, 2388611467u, 514422646u, 568878198u, 1593091911u], [0u, 0u, 559617808u, 2411278197u, 849259169u, 1393814685u, 3046017223u, 3u], [0u, 0u, 1301210784u, 2637945491u, 4197624399u, 1053244963u, 395401161u, 37u], [0u, 0u, 127205952u, 609651137u, 3321538332u, 1942515047u, 3954011612u, 370u], [0u, 0u, 1272059520u, 1801544074u, 3150612249u, 2245281293u, 885410460u, 3709u], [0u, 0u, 4130660608u, 835571558u, 1441351422u, 977976457u, 264170013u, 37092u], [0u, 0u, 2651900416u, 4060748293u, 1528612333u, 1189829981u, 2641700132u, 370920u], [0u, 0u, 749200384u, 1952777272u, 2401221451u, 3308365221u, 647197546u, 3709206u], [0u, 0u, 3197036544u, 2347903537u, 2537378034u, 3018881143u, 2177008171u, 37092061u], [0u, 0u, 1905594368u, 2004198897u, 3898943865u, 124040363u, 295245237u, 370920615u], [0u, 0u, 1876074496u, 2862119790u, 334732990u, 1240403639u, 2952452370u, 3709206150u], [0u, 0u, 1580875776u, 2851394128u, 3347329906u, 3814101798u, 3754719926u, 2732323138u, 8u], [0u, 0u, 2923855872u, 2744137507u, 3408527994u, 3781279619u, 3187460900u, 1553427612u, 86u], [0u, 0u, 3468754944u, 1671571300u, 4020508874u, 3453057829u, 1809837936u, 2649374239u, 863u], [0u, 0u, 327811072u, 3830811120u, 1550383079u, 170839931u, 918510184u, 723938618u, 8636u], [0u, 0u, 3278110720u, 3948372832u, 2618928910u, 1708399313u, 595167248u, 2944418886u, 86361u], [0u, 0u, 2716336128u, 829022663u, 419485333u, 4199091248u, 1656705187u, 3674385085u, 863616u], [0u, 0u, 1393557504u, 3995259340u, 4194853331u, 3336206816u, 3682149991u, 2384112485u, 8636168u], [0u, 0u, 1050673152u, 1297887739u, 3293827655u, 3297297097u, 2461761549u, 2366288378u, 86361685u], [0u, 0u, 1916796928u, 93975504u, 2873505481u, 2908199905u, 3142779017u, 2188047305u, 863616855u], [0u, 0u, 1988100096u, 939755044u, 2965251034u, 3312195280u, 1363019104u, 405636577u, 46233963u, 2u], [0u, 0u, 2701131776u, 807615852u, 3882706566u, 3057181734u, 745289159u, 4056365773u, 462339630u, 20u], [0u, 0u, 1241513984u, 3781191230u, 172359997u, 507046277u, 3157924301u, 1908952067u, 328429013u, 201u], [0u, 0u, 3825205248u, 3452173934u, 1723599978u, 775495474u, 1514471939u, 1909651493u, 3284290134u, 2010u], [0u, 0u, 3892314112u, 162000980u, 56130604u, 3459987448u, 2259817503u, 1916645749u, 2778130272u, 20107u], [0u, 0u, 268435456u, 1620009809u, 561306040u, 240136112u, 1123338558u, 1986588311u, 2011498948u, 201076u], [0u, 0u, 2684354560u, 3315196202u, 1318093107u, 2401361121u, 2643450988u, 2686013928u, 2935120300u, 2010764u], [0u, 0u, 1073741824u, 3087190954u, 296029189u, 2538774733u, 664706109u, 1090335510u, 3581399230u, 20107646u], [0u, 0u, 2147483648u, 807138470u, 2960291897u, 3912910850u, 2352093799u, 2313420509u, 1454253934u, 201076468u], [0u, 0u, 0u, 3776417409u, 3833115195u, 474402842u, 2046101519u, 1659368615u, 1657637457u, 2010764683u], [0u, 0u, 0u, 3404435722u, 3971413590u, 449061132u, 3281146007u, 3708784266u, 3691472685u, 2927777649u, 4u], [0u, 0u, 0u, 3979586148u, 1059430243u, 195644033u, 2746688999u, 2728104299u, 2554988490u, 3507972722u, 46u], [0u, 0u, 0u, 1141155816u, 2004367847u, 1956440332u, 1697086214u, 1511239220u, 4075048426u, 719988857u, 468u], [0u, 0u, 0u, 2821623568u, 2863809288u, 2384534140u, 4085960256u, 2227490315u, 2095778599u, 2904921283u, 4681u], [0u, 0u, 0u, 2446431904u, 2868289110u, 2370504926u, 2204896901u, 800066679u, 3777916811u, 3279409058u, 46816u], [0u, 0u, 0u, 2989482560u, 2913087329u, 2230212786u, 574132535u, 3705699499u, 3419429743u, 2729319516u, 468167u], [0u, 0u, 0u, 4125021824u, 3361069520u, 827291386u, 1446358059u, 2697256623u, 4129526366u, 1523391391u, 4681676u], [0u, 0u, 0u, 2595512576u, 3545924137u, 3977946571u, 1578678703u, 1202762457u, 2640558002u, 2349012031u, 46816763u], [0u, 0u, 0u, 185321984u, 1099503008u, 1124760054u, 2901885151u, 3437689981u, 635776246u, 2015283836u, 468167635u], [0u, 0u, 0u, 1853219840u, 2405095488u, 2657665950u, 3249047736u, 17161448u, 2062795172u, 2972969177u, 386709058u, 1u], [0u, 0u, 0u, 1352329216u, 2576118404u, 806855729u, 2425706294u, 171614487u, 3448082536u, 3959887998u, 3867090586u, 10u], [0u, 0u, 0u, 638390272u, 4286347563u, 3773589999u, 2782226461u, 1716144875u, 121086992u, 944174324u, 16200205u, 109u], [0u, 0u, 0u, 2088935424u, 4208769967u, 3376161631u, 2052460842u, 4276546868u, 1210869923u, 851808648u, 162002052u, 1090u], [0u, 0u, 0u, 3709485056u, 3432994010u, 3696845247u, 3344739243u, 4110763020u, 3518764647u, 4223119186u, 1620020521u, 10900u], [0u, 0u, 0u, 2735112192u, 4265169036u, 2608714109u, 3382621366u, 2452924543u, 827908111u, 3576486204u, 3315303331u, 109003u], [0u, 0u, 0u, 1581318144u, 3996984702u, 317337323u, 3761442594u, 3054408957u, 3984113819u, 1405123673u, 3088262246u, 1090037u], [0u, 0u, 0u, 2928279552u, 1315141359u, 3173373239u, 3254687572u, 479318506u, 1186432533u, 1166334851u, 817851391u, 10900377u], [0u, 0u, 0u, 3512991744u, 266511708u, 1668961321u, 2482104655u, 498217771u, 3274390739u, 3073413920u, 3883546616u, 109003771u], [0u, 0u, 0u, 770179072u, 2665117088u, 3804711322u, 3346210073u, 687210419u, 2679136319u, 669368135u, 180760503u, 1090037719u], [0u, 0u, 0u, 3406823424u, 881367105u, 3687374858u, 3397329666u, 2577136901u, 1021559415u, 2398714060u, 1807605031u, 2310442598u, 2u], [0u, 0u, 0u, 4003463168u, 223736465u, 2514010214u, 3908525596u, 1565241u, 1625659564u, 2512304122u, 896181131u, 1629589504u, 25u], [0u, 0u, 0u, 1379926016u, 2237364659u, 3665265660u, 430550301u, 15652419u, 3371693752u, 3648204743u, 371876723u, 3410993154u, 253u], [0u, 0u, 0u, 914358272u, 898810113u, 2292918237u, 10535722u, 156524191u, 3652166448u, 2122309069u, 3718767238u, 4045160468u, 2537u], [0u, 0u, 0u, 553648128u, 398166540u, 1454345892u, 105357225u, 1565241910u, 2161926112u, 4043221514u, 2827934016u, 1796899024u, 25379u], [0u, 0u, 0u, 1241513984u, 3981665401u, 1658557032u, 1053572253u, 2767517212u, 144424643u, 1777509481u, 2509536393u, 789121062u, 253794u], [0u, 0u, 0u, 3825205248u, 1161948348u, 3700668441u, 1945787941u, 1905368346u, 1444246436u, 595225626u, 3620527454u, 3596243329u, 2537941u], [0u, 0u, 0u, 3892314112u, 3029548896u, 2646946044u, 2278010234u, 1873814280u, 1557562476u, 1657288967u, 1845536173u, 1602694930u, 25379418u], [0u, 0u, 0u, 268435456u, 230717897u, 699656671u, 1305265866u, 1558273621u, 2690722876u, 3687987785u, 1275492549u, 3142047416u, 253794183u], [0u, 0u, 0u, 2684354560u, 2307178970u, 2701599414u, 167756773u, 2697834325u, 1137424987u, 2520139488u, 4164990906u, 1355703090u, 2537941837u], [0u, 0u, 0u, 1073741824u, 1596953226u, 1246190369u, 1677567736u, 1208539474u, 2784315284u, 3726558402u, 2995203401u, 672129021u, 3904581893u, 5u], [0u, 0u, 0u, 2147483648u, 3084630374u, 3871969101u, 3890775474u, 3495460151u, 2073349066u, 2905845658u, 4182230242u, 2426322920u, 391113267u, 59u], [0u, 0u, 0u, 0u, 781532673u, 64985353u, 253049085u, 594863151u, 3553621484u, 3288652808u, 3167596762u, 2788392729u, 3911132675u, 590u], [0u, 0u, 0u, 0u, 3520359434u, 649853531u, 2530490850u, 1653664214u, 1176476473u, 2821757016u, 1611196555u, 2114123521u, 456621092u, 5909u], [0u, 0u, 0u, 0u, 843855972u, 2203568022u, 3830072021u, 3651740257u, 3174830141u, 2447766386u, 3227063668u, 3961366029u, 271243628u, 59091u], [0u, 0u, 0u, 0u, 4143592424u, 560843741u, 3940981847u, 2157664210u, 1683530346u, 3002827387u, 2205865613u, 958954633u, 2712436289u, 590910u], [0u, 0u, 0u, 0u, 2781218576u, 1313470123u, 755112807u, 101805629u, 3950401577u, 4258470097u, 583819656u, 999611743u, 1354559116u, 5909106u], [0u, 0u, 0u, 0u, 2042381984u, 249799348u, 3256160777u, 1018056291u, 849310106u, 3929995315u, 1543229273u, 1406182839u, 660689274u, 59091063u], [0u, 0u, 0u, 0u, 3243950656u, 2497993484u, 2496836698u, 1590628325u, 4198133766u, 645247487u, 2547390851u, 1176926505u, 2311925447u, 590910631u], [0u, 0u, 0u, 0u, 2374735488u, 3505098367u, 3493530505u, 3021381367u, 3326631999u, 2157507583u, 3999072031u, 3179330463u, 1644417992u, 1614139019u, 1u], [0u, 0u, 0u, 0u, 2272518400u, 691245307u, 575566690u, 149042606u, 3201548925u, 100239357u, 1336014651u, 1728533567u, 3559278039u, 3256488305u, 13u], [0u, 0u, 0u, 0u, 1250347520u, 2617485779u, 1460699605u, 1490426061u, 1950718178u, 1002393577u, 475244622u, 105466489u, 1233042026u, 2500111986u, 137u], [0u, 0u, 0u, 0u, 3913540608u, 405054016u, 1722094168u, 2019358725u, 2327312599u, 1434001182u, 457478926u, 1054664891u, 3740485668u, 3526283382u, 1375u], [0u, 0u, 0u, 0u, 480700416u, 4050540169u, 41072496u, 3013718070u, 1798289514u, 1455109937u, 279821967u, 1956714319u, 3045118314u, 903095460u, 13758u], [0u, 0u, 0u, 0u, 512036864u, 1850696027u, 410724969u, 72409628u, 803025963u, 1666197486u, 2798219673u, 2387274006u, 386412072u, 441020015u, 137582u], [0u, 0u, 0u, 0u, 825401344u, 1327091087u, 4107249694u, 724096280u, 3735292334u, 3777072973u, 2212392957u, 2397903586u, 3864120725u, 115232854u, 1375821u], [0u, 0u, 0u, 0u, 3959046144u, 386008983u, 2417791279u, 2945995513u, 2993184973u, 3410991370u, 649093098u, 2504199385u, 4281468887u, 1152328548u, 13758210u], [0u, 0u, 0u, 0u, 935755776u, 3860089839u, 2703076310u, 3690151359u, 4162045960u, 4045142634u, 2195963691u, 3567157371u, 4159983211u, 2933350897u, 137582102u], [0u, 0u, 0u, 0u, 767623168u, 4241160024u, 1260959332u, 2541775228u, 2965753944u, 1796720685u, 484800439u, 1311835347u, 2945126454u, 3563705203u, 1375821026u], [0u, 0u, 0u, 0u, 3381264384u, 3756894577u, 4019658737u, 3942915802u, 3887735669u, 787337672u, 553037098u, 233451583u, 3681460767u, 1277313668u, 873308380u, 3u], [0u, 0u, 0u, 0u, 3747872768u, 3209207409u, 1541881714u, 774452365u, 222651035u, 3578409433u, 1235403685u, 2334515831u, 2454869302u, 4183202096u, 143149210u, 32u], [0u, 0u, 0u, 0u, 3118989312u, 2027303026u, 2533915259u, 3449556357u, 2226510351u, 1424355962u, 3764102266u, 1870321832u, 3073856545u, 3177315301u, 1431492109u, 320u], [0u, 0u, 0u, 0u, 1125122048u, 3093161083u, 3864316114u, 135825207u, 790267038u, 1358657737u, 3281284295u, 1523349144u, 673794382u, 1708381945u, 1430019209u, 3203u], [0u, 0u, 0u, 0u, 2661285888u, 866839760u, 4283422779u, 1358252078u, 3607703084u, 701675483u, 2748071881u, 2348589559u, 2442976527u, 4198917563u, 1415290205u, 32033u], [0u, 0u, 0u, 0u, 843055104u, 78463014u, 4179522128u, 697618901u, 1717292475u, 2721787542u, 1710915035u, 2011059116u, 2954928795u, 3334469971u, 1268000171u, 320333u], [0u, 0u, 0u, 0u, 4135583744u, 784630141u, 3140515616u, 2681221723u, 4288022863u, 1448071647u, 4224248468u, 2930721979u, 3779484178u, 3279928644u, 4090067125u, 3203332u], [0u, 0u, 0u, 0u, 2701131776u, 3551334123u, 1340385089u, 1042413461u, 4225522972u, 1595814591u, 3587779019u, 3537416023u, 3435103418u, 2734515376u, 2245965593u, 32033329u], [0u, 0u, 0u, 0u, 1241513984u, 1153602868u, 518949010u, 1834200021u, 3600524058u, 3073244031u, 1518051825u, 1014421870u, 4286263116u, 1575349991u, 984819456u, 320333295u], [0u, 0u, 0u, 0u, 3825205248u, 2946094090u, 894522806u, 1162131027u, 1645502216u, 667669246u, 2295616369u, 1554284111u, 4207925498u, 2868598031u, 1258259971u, 3203332952u], [0u, 0u, 0u, 0u, 3892314112u, 3691137132u, 355293474u, 3031375680u, 3570120274u, 2381725167u, 1481327211u, 2657939227u, 3424549319u, 2916176543u, 3992665124u, 1968558450u, 7u], [0u, 0u, 0u, 0u, 268435456u, 2551632961u, 3552934748u, 248985728u, 1341464379u, 2342415198u, 1928370227u, 809588497u, 4180722124u, 3391961661u, 1271945582u, 2505715325u, 74u], [0u, 0u, 0u, 0u, 2684354560u, 4041493130u, 1169609117u, 2489857288u, 529741902u, 1949315503u, 2103833091u, 3800917678u, 3152515577u, 3854845547u, 4129521235u, 3582316772u, 745u], [0u, 0u, 0u, 0u, 1073741824u, 1760225642u, 3106156587u, 3423736402u, 1002451729u, 2313285847u, 3858461730u, 3649438416u, 1460384706u, 4188717109u, 2640506694u, 1463429361u, 7458u], [0u, 0u, 0u, 0u, 2147483648u, 422387238u, 996794802u, 4172592955u, 1434582705u, 1658021992u, 4224878937u, 2134645800u, 1718945180u, 3232465429u, 635263173u, 1749391728u, 74583u], [0u, 0u, 0u, 0u, 0u, 4223872385u, 1378013428u, 3071223888u, 1460925171u, 3695318035u, 3594083709u, 4166588825u, 9582620u, 2259883222u, 2057664441u, 314048097u, 745834u], [0u, 0u, 0u, 0u, 0u, 3584018186u, 895232401u, 647467811u, 1724349829u, 2593441985u, 1581098730u, 3011182594u, 95826209u, 1123995740u, 3396775231u, 3140480974u, 7458340u], [0u, 0u, 0u, 0u, 0u, 1480443492u, 362389426u, 2179710816u, 63629107u, 164616078u, 2926085418u, 47054871u, 958262097u, 2650022808u, 3902981240u, 1340038675u, 74583407u], [0u, 0u, 0u, 0u, 0u, 1919533032u, 3623894263u, 322271680u, 636291075u, 1646160780u, 3491050404u, 470548716u, 992686378u, 730424306u, 375106742u, 515484871u, 745834073u], [0u, 0u, 0u, 0u, 0u, 2015461136u, 1879204266u, 3222716808u, 2067943454u, 3576705913u, 550765675u, 410519872u, 1336929189u, 3009275766u, 3751067421u, 859881414u, 3163373435u, 1u], [0u, 0u, 0u, 0u, 0u, 2974742176u, 1612173480u, 2162397012u, 3499565363u, 1407320766u, 1212689462u, 4105198721u, 484390002u, 27986591u, 3150935849u, 8879556u, 1568963280u, 17u], [0u, 0u, 0u, 0u, 0u, 3977617984u, 3236832918u, 149133643u, 635915267u, 1188305780u, 3536960031u, 2397281548u, 548932733u, 279865911u, 1444587418u, 88795567u, 2804730912u, 173u], [0u, 0u, 0u, 0u, 0u, 1121474176u, 2303558117u, 1491336437u, 2064185374u, 3293123209u, 1009861944u, 2497979008u, 1194360039u, 2798659111u, 1560972292u, 887955673u, 2277505344u, 1736u], [0u, 0u, 0u, 0u, 0u, 2624807168u, 1560744692u, 2028462487u, 3461984559u, 2866461022u, 1508684855u, 3504953602u, 3353665803u, 2216787336u, 2724821038u, 289622141u, 1300216962u, 17365u], [0u, 0u, 0u, 0u, 0u, 478267904u, 2722545038u, 3104755689u, 260107226u, 2894806452u, 2201946668u, 689797655u, 3471886966u, 693036887u, 1478406609u, 2896221416u, 117267732u, 173653u], [0u, 0u, 0u, 0u, 0u, 487711744u, 1455646605u, 982785824u, 2601072267u, 3178260744u, 544630206u, 2603009259u, 359131293u, 2635401582u, 1899164203u, 3192410387u, 1172677326u, 1736530u], [0u, 0u, 0u, 0u, 0u, 582150144u, 1671564163u, 1237923651u, 240918896u, 1717836374u, 1151334771u, 260288815u, 3591312936u, 584212044u, 1811772852u, 1859332802u, 3136838675u, 17365302u], [0u, 0u, 0u, 0u, 0u, 1526534144u, 3830739743u, 3789301921u, 2409188962u, 4293461852u, 2923413121u, 2602888152u, 1553390992u, 1547153152u, 937859337u, 1413458840u, 1303615682u, 173653027u], [0u, 0u, 0u, 0u, 0u, 2380439552u, 3947659065u, 3533280850u, 2617053148u, 4279912861u, 3464327443u, 259077750u, 2649008038u, 2586629635u, 788658781u, 1249686514u, 151254935u, 1736530273u], [0u, 0u, 0u, 0u, 0u, 2329559040u, 821884991u, 973070141u, 400727712u, 4144422952u, 283536071u, 2590777508u, 720276604u, 96492580u, 3591620520u, 3906930549u, 1512549352u, 185433546u, 4u], [0u, 0u, 0u, 0u, 0u, 1820753920u, 3923882619u, 1140766819u, 4007277122u, 2789523856u, 2835360719u, 137971304u, 2907798750u, 964925801u, 1556466832u, 414599834u, 2240591641u, 1854335463u, 40u], [0u, 0u, 0u, 0u, 0u, 1027670016u, 584120530u, 2817733607u, 1418065558u, 2125434793u, 2583803420u, 1379713046u, 3308183724u, 1059323424u, 2679766434u, 4145998343u, 931079930u, 1363485451u, 404u], [0u, 0u, 0u, 0u, 0u, 1686765568u, 1546238006u, 2407532295u, 1295753698u, 4074478749u, 68230428u, 912228578u, 3017066171u, 2003299655u, 1027860566u, 2805277772u, 720864717u, 749952624u, 4043u], [0u, 0u, 0u, 0u, 0u, 3982753792u, 2577478175u, 2600486473u, 72635097u, 2090081829u, 682304289u, 532351188u, 105890640u, 2853127373u, 1688671072u, 2282973946u, 2913679880u, 3204558945u, 40431u], [0u, 0u, 0u, 0u, 0u, 1172832256u, 4977983u, 235060960u, 726350976u, 3720949106u, 2528075598u, 1028544585u, 1058906401u, 2761469954u, 4001808838u, 1354902983u, 3366995029u, 1980818384u, 404317u], [0u, 0u, 0u, 0u, 0u, 3138387968u, 49779832u, 2350609600u, 2968542464u, 2849752693u, 3805919508u, 1695511263u, 1999129420u, 1844895766u, 1363382722u, 664127951u, 3605179221u, 2628314663u, 4043174u], [0u, 0u, 0u, 0u, 0u, 1319108608u, 497798327u, 2031259520u, 3915620869u, 2727723160u, 3699456718u, 4070210750u, 2811425019u, 1269088480u, 748925336u, 2346312217u, 1692053843u, 513342862u, 40431746u], [0u, 0u, 0u, 0u, 0u, 306184192u, 683015977u, 3132726017u, 501503030u, 1507427833u, 2634828818u, 2047401844u, 2344446423u, 4100950214u, 3194286066u, 1988285691u, 4035636547u, 838461327u, 404317461u], [0u, 0u, 0u, 0u, 0u, 3061841920u, 2535192474u, 1262489099u, 720063011u, 2189376443u, 578484407u, 3294149262u, 1969627754u, 2354796481u, 1878089597u, 2702987733u, 1701659810u, 4089645983u, 4043174611u], [0u, 0u, 0u, 0u, 0u, 553648128u, 3877088267u, 4034956403u, 2905662816u, 418927951u, 1489876779u, 2876721549u, 2516408363u, 2073128334u, 1601026791u, 1260073558u, 4131696218u, 2241754169u, 1777040455u, 9u], [0u, 0u, 0u, 0u, 0u, 1241513984u, 116177007u, 1694858375u, 3286824393u, 4189279516u, 2013865902u, 2997411717u, 3689247156u, 3551414161u, 3125366026u, 4010800991u, 2662256518u, 942705219u, 590535371u, 94u], [0u, 0u, 0u, 0u, 0u, 3825205248u, 1161770072u, 4063681862u, 2803472861u, 3238089503u, 2958789845u, 4204313398u, 2532733198u, 1154403250u, 1188889196u, 1453304253u, 852761413u, 837117604u, 1610386416u, 941u], [0u, 0u, 0u, 0u, 0u, 3892314112u, 3027766136u, 1982112958u, 2264924843u, 2316123964u, 3818094681u, 3388428322u, 3852495509u, 2954097913u, 3298957370u, 1648140644u, 4232646837u, 4076208745u, 3218962273u, 9413u], [0u, 0u, 0u, 0u, 0u, 268435456u, 212890297u, 2641260403u, 1174411954u, 1686403165u, 3821208447u, 3819512156u, 4165216729u, 3771175362u, 2924802634u, 3596504559u, 3671762709u, 2107381795u, 2124851667u, 94137u], [0u, 0u, 0u, 0u, 0u, 2684354560u, 2128902970u, 642800254u, 3154184954u, 3979129764u, 3852346105u, 3835383200u, 2997461634u, 3352015261u, 3478222572u, 1605307228u, 2357888730u, 3893948774u, 4068647490u, 941374u], [0u, 0u, 0u, 0u, 0u, 1073741824u, 4109160522u, 2133035248u, 1477078469u, 1136591983u, 4163722691u, 3994093640u, 4204812572u, 3455381544u, 422487359u, 3168170400u, 2104050823u, 284782081u, 2031769245u, 9413749u], [0u, 0u, 0u, 0u, 0u, 2147483648u, 2436899558u, 4150483305u, 1885882806u, 2775985241u, 2982521248u, 1286230745u, 3393420065u, 194077081u, 4224873598u, 1616932928u, 3860639053u, 2847820814u, 3137823266u, 94137494u], [0u, 0u, 0u, 0u, 0u, 0u, 2894159105u, 2850127391u, 1678958885u, 1990048638u, 4055408710u, 4272372864u, 3869429580u, 1940770817u, 3594030316u, 3284427401u, 4246652165u, 2708404372u, 1313461594u, 941374947u], [0u, 0u, 0u, 0u, 0u, 0u, 3171787274u, 2731470140u, 3904686968u, 2720617199u, 1899381440u, 4069022985u, 39590145u, 2227838995u, 1580564796u, 2779502946u, 3811815993u, 1314239953u, 249714058u, 823814881u, 2u], [0u, 0u, 0u, 0u, 0u, 0u, 1653101668u, 1544897631u, 392164022u, 1436368223u, 1813945222u, 2035524190u, 395901459u, 803553470u, 2920746077u, 2025225687u, 3758421568u, 257497650u, 2497140583u, 3943181514u, 21u], [0u, 0u, 0u, 0u, 0u, 0u, 3646114792u, 2564074425u, 3921640223u, 1478780342u, 959583039u, 3175372720u, 3959014594u, 3740567404u, 3437656995u, 3072387692u, 3224477316u, 2574976508u, 3496569350u, 777109481u, 219u], [0u, 0u, 0u, 0u, 0u, 0u, 2101409552u, 4165907778u, 561696571u, 1902901541u, 1005895801u, 1688956130u, 935440283u, 3045935681u, 16831590u, 659105856u, 2180002095u, 4274928607u, 605955137u, 3476127522u, 2191u], [0u, 0u, 0u, 0u, 0u, 0u, 3834226336u, 3004372120u, 1321998423u, 1849146227u, 1469023422u, 4004659414u, 764468241u, 394585740u, 168315907u, 2296091264u, 325184471u, 4094580411u, 1764584083u, 401536853u, 21918u], [0u, 0u, 0u, 0u, 0u, 0u, 3982524992u, 4273917432u, 335082348u, 1311593089u, 1805332336u, 1391888479u, 3349715123u, 3945857401u, 1683159070u, 1486076160u, 3251844715u, 2291098446u, 465971655u, 4015368534u, 219180u], [0u, 0u, 0u, 0u, 0u, 0u, 1170544256u, 4084468665u, 3350823489u, 231029002u, 873454179u, 1033982906u, 3432380161u, 803868353u, 3946688821u, 1975859715u, 2453676081u, 1436147987u, 364749259u, 1498979677u, 2191809u], [0u, 0u, 0u, 0u, 0u, 0u, 3115507968u, 2189980988u, 3443463827u, 2310290027u, 144607198u, 1749894470u, 4259030540u, 3743716241u, 812182547u, 2578727975u, 3061924334u, 1476577987u, 3647492593u, 2104894882u, 21918093u], [0u, 0u, 0u, 0u, 0u, 0u, 1090308608u, 424973407u, 74899907u, 1628063798u, 1446071985u, 319075516u, 3935599740u, 3077424051u, 3826858182u, 17475975u, 554472274u, 1880877989u, 2115187565u, 3869079644u, 219180934u], [0u, 0u, 0u, 0u, 0u, 0u, 2313151488u, 4249734072u, 748999070u, 3395736092u, 1575817965u, 3190755163u, 701291736u, 709469447u, 3908843459u, 174759758u, 1249755444u, 1628910707u, 3972006470u, 36090780u, 2191809349u], [0u, 0u, 0u, 0u, 0u, 0u, 1656678400u, 3842635061u, 3195023413u, 3892589849u, 2873277769u, 1842780561u, 2717950071u, 2799727175u, 433728927u, 1747597589u, 3907619848u, 3404205184u, 1065359039u, 360907809u, 443257010u, 5u], [0u, 0u, 0u, 0u, 0u, 0u, 3681882112u, 4066612245u, 1885463066u, 271192833u, 2962973923u, 1247936432u, 1409696938u, 2227467980u, 42321980u, 296106707u, 421492820u, 3977280777u, 2063655805u, 3609078092u, 137602804u, 51u], [0u, 0u, 0u, 0u, 0u, 0u, 2459082752u, 2011416794u, 1674761485u, 2711928334u, 3859935454u, 3889429734u, 1212067494u, 799843323u, 423219805u, 2961067070u, 4214928200u, 1118102106u, 3456688875u, 1731042556u, 1376028048u, 510u], [0u, 0u, 0u, 0u, 0u, 0u, 3115991040u, 2934298761u, 3862712966u, 1349479567u, 4239616178u, 239591684u, 3530740357u, 3703465936u, 4232198051u, 3840866924u, 3494576342u, 2591086477u, 207150384u, 130556384u, 875378596u, 5103u], [0u, 0u, 0u, 0u, 0u, 0u, 1095139328u, 3573183841u, 4267391298u, 609893790u, 3741456119u, 2395916849u, 947665202u, 2674921000u, 3667274854u, 4048930881u, 586025060u, 141061002u, 2071503846u, 1305563840u, 163851368u, 51032u], [0u, 0u, 0u, 0u, 0u, 0u, 2361458688u, 1372100044u, 4019207324u, 1803970613u, 3054822823u, 2484332018u, 886717433u, 979406226u, 2313010178u, 1834603154u, 1565283313u, 1410610021u, 3535169276u, 170736516u, 1638513683u, 510320u], [0u, 0u, 0u, 0u, 0u, 0u, 2139750400u, 836098557u, 1537367579u, 859836955u, 483457162u, 3368483707u, 277239743u, 1204127670u, 1655265302u, 1166162361u, 2767931246u, 1221198325u, 991954395u, 1707365168u, 3500234942u, 5103203u], [0u, 0u, 0u, 0u, 0u, 0u, 4217634816u, 4066018278u, 2488773903u, 8434961u, 539604326u, 3620065999u, 2772397437u, 3451342108u, 3667751134u, 3071689021u, 1909508686u, 3622048664u, 1329609360u, 4188749794u, 642611055u, 51032038u], [0u, 0u, 0u, 0u, 0u, 0u, 3521642496u, 2005477125u, 3412902559u, 84349615u, 1101075964u, 1840921623u, 1954170602u, 153682718u, 2317772980u, 652119146u, 1915217683u, 1860748276u, 411191720u, 3232792279u, 2131143263u, 510320381u], [0u, 0u, 0u, 0u, 0u, 0u, 856686592u, 2874902074u, 4064254522u, 843496157u, 2420825048u, 1229347048u, 2361836840u, 1536827184u, 1702893320u, 2226224169u, 1972307647u, 1427613580u, 4111917204u, 2263151718u, 4131563453u, 808236518u, 1u], [0u, 0u, 0u, 0u, 0u, 0u, 4271898624u, 2979216965u, 1987839562u, 4139994283u, 2733414001u, 3703535893u, 2143531922u, 2483369957u, 4144031315u, 787405213u, 2543207291u, 1391233916u, 2464466379u, 1156680709u, 2660928871u, 3787397893u, 11u], [0u, 0u, 0u, 0u, 0u, 0u, 4064280576u, 4022365883u, 2698526442u, 2745237170u, 1564336243u, 2675620568u, 4255450044u, 3358863094u, 2785607491u, 3579084843u, 3957236431u, 1027437277u, 3169827313u, 2976872503u, 839484936u, 3514240568u, 118u], [0u, 0u, 0u, 0u, 0u, 0u, 1988100096u, 1568953175u, 1215460653u, 1682567930u, 2758460548u, 986401907u, 3899794782u, 3523859877u, 2086271141u, 1431110068u, 917658654u, 1684438187u, 1633502060u, 3998921261u, 4099882070u, 782667313u, 1188u], [0u, 0u, 0u, 0u, 0u, 0u, 2701131776u, 2804629866u, 3564671941u, 3940777414u, 1814801707u, 1274084484u, 343242158u, 878860411u, 3682842234u, 1426198796u, 586651951u, 3959479984u, 3450118715u, 1334506949u, 2344115045u, 3531705843u, 11881u], [0u, 0u, 0u, 0u, 0u, 0u, 1241513984u, 2276494890u, 1286981048u, 753068484u, 968147895u, 4150910252u, 3432421582u, 198669518u, 2468683974u, 1377086080u, 1571552217u, 940094177u, 141448791u, 460167610u, 1966313973u, 957320067u, 118818u], [0u, 0u, 0u, 0u, 0u, 0u, 3825205248u, 1290112422u, 4279875893u, 3235717546u, 1091544359u, 2854396858u, 4259444757u, 1986695187u, 3212003260u, 885958917u, 2830620285u, 811007181u, 1414487912u, 306708804u, 2483270547u, 983266082u, 1188182u], [0u, 0u, 0u, 0u, 0u, 0u, 3892314112u, 16222340u, 4144053269u, 2292404397u, 2325509005u, 2774164806u, 3939741912u, 2687082695u, 2055261532u, 269654585u, 2536399076u, 3815104520u, 1259977233u, 3067088043u, 3357868990u, 1242726233u, 11881822u], [0u, 0u, 0u, 0u, 0u, 0u, 268435456u, 162223409u, 2785827026u, 1449207499u, 1780253575u, 1971844289u, 742713462u, 1101023183u, 3372746142u, 2696545854u, 3889154280u, 3791306837u, 4009837746u, 606109360u, 3513918835u, 3837327745u, 118818222u], [0u, 0u, 0u, 0u, 0u, 0u, 2684354560u, 1622234090u, 2088466484u, 1607173108u, 622666569u, 2538573710u, 3132167328u, 2420297239u, 3662690350u, 1195654771u, 236837142u, 3553330011u, 1443671804u, 1766126313u, 779449983u, 4013539090u, 1188182228u], [0u, 0u, 0u, 0u, 0u, 0u, 1073741824u, 3337439018u, 3704795659u, 3186829196u, 1931698397u, 3910900621u, 1256902213u, 2728135917u, 2267165137u, 3366613126u, 2368371422u, 1173561742u, 1551816160u, 481393949u, 3499532538u, 1480685237u, 3291887697u, 2u], [0u, 0u, 0u, 0u, 0u, 0u, 2147483648u, 3309619110u, 2688218229u, 1803520896u, 2137114793u, 454300550u, 3979087547u, 1511555396u, 1196814896u, 3601360193u, 2208877747u, 3145682833u, 2633259714u, 518972197u, 635587013u, 1921950490u, 2854105901u, 27u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 3031420033u, 1112378521u, 855339782u, 4191278750u, 248038208u, 1136169807u, 2230652081u, 3378214371u, 1653863564u, 613940998u, 1392057263u, 562793371u, 894754680u, 2060902835u, 2039635717u, 2771255238u, 276u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 249429258u, 2533850625u, 4258430526u, 3258081837u, 2480382089u, 2771763478u, 831684332u, 3717372643u, 3653733759u, 1844442687u, 1035670743u, 1332966417u, 357612209u, 3429159168u, 3216487990u, 1942748608u, 2766u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 2494292580u, 3863669770u, 3929599601u, 2516047307u, 3328984417u, 1947831009u, 4021876030u, 2813988063u, 2177599230u, 1264557694u, 1766772842u, 444762284u, 3576122093u, 4226820608u, 2100108835u, 2247616903u, 27664u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 3468089320u, 4276959337u, 641290354u, 3685636599u, 3225073103u, 2298440913u, 1564054640u, 2370076863u, 301155826u, 4055642353u, 487859238u, 152655548u, 1401482563u, 3613500424u, 3821219175u, 1001332554u, 276645u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 321154832u, 4114887714u, 2117936253u, 2496627623u, 2185959966u, 1509572657u, 2755644517u, 2225932153u, 3011558265u, 1901717866u, 583625093u, 1526555481u, 1129923742u, 1775265875u, 3852453390u, 1423390956u, 2766452u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 3211548320u, 2494171476u, 3999493355u, 3491439754u, 384763185u, 2210824687u, 1786641397u, 784485056u, 50811583u, 1837309483u, 1541283638u, 2380652923u, 2709302831u, 572789568u, 4164795536u, 1349007680u, 27664523u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 2050712128u, 3466878287u, 1340227891u, 554659181u, 3847631858u, 633410390u, 686544791u, 3549883268u, 508115831u, 1193225646u, 2527934496u, 2331692753u, 1323224539u, 1432928390u, 2993249697u, 605174921u, 276645233u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 3327252096u, 309044506u, 517377030u, 1251624517u, 4116580213u, 2039136612u, 2570480615u, 1139094313u, 786191022u, 3342321869u, 3804508482u, 1842091055u, 347343507u, 1444382015u, 4162693197u, 1756781920u, 2766452331u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 3207749888u, 3090445067u, 878803004u, 3926310579u, 2511096468u, 3211496945u, 4229969674u, 2801008543u, 3566942926u, 3358447619u, 3685346459u, 1241041374u, 3473435074u, 1558918262u, 2972226309u, 387950025u, 1894719538u, 6u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 2012727808u, 839679605u, 198095455u, 608400128u, 3636128209u, 2050198383u, 3644991083u, 2240281663u, 1309690898u, 3519705126u, 2493726229u, 3820479156u, 374612374u, 2704280740u, 3952459317u, 3879500256u, 1767326196u, 64u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 2947408896u, 4101828758u, 1980954551u, 1789033984u, 2001543723u, 3322114654u, 2090172466u, 927980158u, 212007097u, 837312895u, 3462425818u, 3845053197u, 3746123748u, 1273003624u, 869887512u, 140296905u, 493392785u, 644u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 3704285184u, 2363581922u, 2629676335u, 710470660u, 2835568050u, 3156375472u, 3721855483u, 689866992u, 2120070972u, 4078161654u, 264519813u, 4090793610u, 3101499120u, 4140101656u, 108940530u, 1402969052u, 638960554u, 6441u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 2683113472u, 2160982748u, 526959579u, 2809739310u, 2585876725u, 1498983654u, 2858816469u, 2603702632u, 4020840537u, 2126910880u, 2645198139u, 2253230436u, 950220137u, 2746310903u, 1089405309u, 1144788632u, 2094638247u, 64411u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 1061330944u, 134991006u, 974628499u, 2327589325u, 88963480u, 2104934658u, 2818360917u, 267222550u, 1553699712u, 4089239625u, 682177618u, 1057467886u, 912266783u, 1693305256u, 2304118504u, 2857951730u, 3766513288u, 644114u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 2023374848u, 1349910062u, 1156350398u, 1801056772u, 889634805u, 3869477396u, 2413805398u, 2672225506u, 2652095232u, 2237690589u, 2526808893u, 1984744269u, 532733240u, 4048150674u, 1566348563u, 2809713529u, 3305394518u, 6441148u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 3053879296u, 614198736u, 2973569391u, 830698538u, 306413462u, 40068298u, 2663217509u, 952451289u, 751148550u, 902069416u, 3793252455u, 2667573511u, 1032365108u, 1826801077u, 2778583751u, 2327331517u, 2989174114u, 64411487u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 474021888u, 1847020071u, 3965890135u, 4012018090u, 3064134621u, 400682980u, 862371314u, 934578304u, 3216518206u, 430759569u, 3572786184u, 905931342u, 1733716494u, 1088141588u, 2016033738u, 1798478696u, 4121937369u, 644114876u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 445251584u, 1290331527u, 1004195690u, 1465475245u, 576575147u, 4006829807u, 33778548u, 755848450u, 2100410990u, 12628401u, 1368123473u, 469378836u, 157295758u, 2291481292u, 2980468198u, 804917780u, 2564668030u, 2146181473u, 1u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 157548544u, 18413383u, 1452022311u, 1769850564u, 1470784177u, 1413592407u, 337785489u, 3263517204u, 3824240717u, 126284014u, 796332842u, 398821067u, 1572957581u, 1439976440u, 4034878209u, 3754210510u, 4171843821u, 4281945551u, 14u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 1575485440u, 184133830u, 1635321222u, 518636459u, 1822939886u, 1251022185u, 3377854893u, 2570400968u, 3882668809u, 1262840148u, 3668361124u, 3988210671u, 2844673922u, 1514862515u, 1694076429u, 3182366741u, 3063732554u, 4164749855u, 149u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 2869952512u, 1841338303u, 3468310332u, 891397297u, 1049529677u, 3920287262u, 3713777860u, 4229173207u, 171982431u, 4038466897u, 2323872874u, 1227401054u, 2676935453u, 2263723268u, 4055862405u, 1758896341u, 572554475u, 2992792893u, 1499u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 2929721344u, 1233513852u, 323364956u, 324038386u, 1905362180u, 548166958u, 2778040241u, 3637026414u, 1719824319u, 1729963306u, 1763892269u, 3684075953u, 999550756u, 1162396206u, 1903918391u, 409094235u, 1430577458u, 4158125155u, 14996u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 3527409664u, 3745203934u, 3233649562u, 3240383860u, 1873752616u, 1186702288u, 2010598635u, 2010525778u, 18374014u, 119763880u, 459053510u, 2481021166u, 1405572976u, 3034027470u, 1859314728u, 4090942354u, 1420872692u, 2926545889u, 149969u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 914358272u, 3092300980u, 2271724556u, 2339067535u, 1557656983u, 3277088292u, 2926117168u, 2925388600u, 183740144u, 1197638800u, 295567804u, 3335375181u, 1170827877u, 275503631u, 1413278103u, 2254717880u, 1323825041u, 3495655117u, 1499696u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 553648128u, 858238730u, 1242409087u, 1915838875u, 2691667947u, 2706111851u, 3491367911u, 3484082230u, 1837401446u, 3386453408u, 2955678042u, 3288980738u, 3118344185u, 2755036312u, 1247879142u, 1072342323u, 353348527u, 596812805u, 14996968u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 1241513984u, 4287420005u, 3834156279u, 1978519568u, 1146875698u, 1291314740u, 553940748u, 481083940u, 1194145284u, 3799763012u, 3786976651u, 2825036314u, 1118670785u, 1780559351u, 3888856834u, 2133488640u, 3533485272u, 1673160754u, 149969681u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 3825205248u, 4219494388u, 3981824431u, 2605326504u, 2878822392u, 28245514u, 1244440187u, 515872105u, 3351518249u, 3637891754u, 3510028150u, 2480559372u, 2596773264u, 625724328u, 233862680u, 4155017225u, 975114356u, 3846705660u, 1499696813u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 3892314112u, 3540238224u, 1163538655u, 283461273u, 3018420150u, 282455146u, 3854467278u, 863753756u, 3450411419u, 2019179179u, 740543140u, 3330757248u, 197928869u, 1962275990u, 2338626801u, 2895466586u, 1161208977u, 4107318234u, 2112066250u, 3u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 268435456u, 1042643881u, 3045451966u, 2834612732u, 119430428u, 2824551467u, 4184934412u, 47602976u, 144375824u, 3011922614u, 3110464108u, 3242801409u, 1979288697u, 2442890716u, 1911431534u, 3184862089u, 3022155184u, 2418476678u, 3940793325u, 34u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 2684354560u, 1836504218u, 389748590u, 2576323551u, 1194304286u, 2475710894u, 3194638462u, 476029769u, 1443758240u, 54455068u, 1039870015u, 2363243025u, 2613017793u, 2954070684u, 1934446161u, 1783849822u, 156780775u, 2709930307u, 753227591u, 349u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 1073741824u, 1185173002u, 3897485904u, 4288399030u, 3353108273u, 3282272462u, 1881613553u, 465330401u, 1552680513u, 544550683u, 1808765558u, 2157593772u, 360374159u, 3770903070u, 2164592432u, 658629040u, 1567807754u, 1329499294u, 3237308620u, 3491u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 2147483648u, 3261795430u, 320153378u, 4229284645u, 3466311667u, 2757953555u, 1636266353u, 358336718u, 2641903243u, 1150539537u, 907786397u, 101101244u, 3603741595u, 3349292332u, 171087848u, 2291323109u, 2793175653u, 410091055u, 2308315131u, 34917u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 2553183233u, 3201533787u, 3638140786u, 303378311u, 1809731782u, 3477761648u, 3583367183u, 649228654u, 2915460784u, 487929380u, 1011012442u, 1677677582u, 3428152256u, 1710878487u, 1438394610u, 2161952759u, 4100910556u, 1608314830u, 349175u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 4056995850u, 1950566803u, 2021669499u, 3033783118u, 917448636u, 417878116u, 1473933470u, 2197319252u, 3384804065u, 584326510u, 1520189829u, 3891873934u, 4216751491u, 4223882989u, 1499044215u, 144691113u, 2354399901u, 3198246421u, 3491753u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 1915252836u, 2325798855u, 3036825810u, 273060112u, 584551775u, 4178781162u, 1854432812u, 498356043u, 3783269583u, 1548297811u, 2316996403u, 264033679u, 3512809255u, 3584124235u, 2105540271u, 1446911133u, 2069162530u, 1917693143u, 34917537u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 1972659176u, 1783152074u, 303487033u, 2730601127u, 1550550454u, 3133105957u, 1364458945u, 688593138u, 3472957463u, 2598076230u, 1695127553u, 2640336795u, 768354182u, 1481503990u, 3875533534u, 1584209446u, 3511756119u, 1997062250u, 349175374u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 2546722576u, 651651560u, 3034870334u, 1536207494u, 2620602658u, 1266288501u, 759687569u, 2590964087u, 369836263u, 210958532u, 4066373648u, 633564177u, 3388574530u, 1930138013u, 100629679u, 2957192581u, 757822825u, 2790753324u, 3491753744u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 3992389280u, 2221548309u, 283932269u, 2477173059u, 436222807u, 4072950424u, 3301908396u, 139837095u, 3698362636u, 2109585320u, 2009030816u, 2040674483u, 3820974229u, 2121510953u, 1006296794u, 3802122034u, 3283260960u, 2137729465u, 557799078u, 8u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 1269187136u, 740646619u, 2839322695u, 3296894110u, 67260779u, 2074798577u, 2954312897u, 1398370957u, 2623887992u, 3915984024u, 2910438980u, 3226875650u, 3850003926u, 4035240354u, 1473033352u, 3661481974u, 2767838536u, 4197425473u, 1283023488u, 81u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 4101936768u, 3111498896u, 2623423175u, 2904170034u, 672607797u, 3568116586u, 3773325198u, 1098807688u, 469076147u, 505134582u, 3334586033u, 2203985434u, 4140300899u, 1697697884u, 1845431641u, 2255081375u, 1908581592u, 3319549072u, 4240300297u, 812u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 2364662016u, 1050217897u, 464427981u, 3271896570u, 2431110680u, 1321427493u, 3373513620u, 2398142296u, 395794176u, 756378525u, 3281089259u, 565017867u, 2748303331u, 4092076961u, 1274447229u, 1075977274u, 1905946741u, 3130719652u, 3748297313u, 8129u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 2171783680u, 1912244383u, 349312516u, 2654194629u, 2836270327u, 329373047u, 3670365131u, 2506586487u, 3957941765u, 3268817954u, 2746121519u, 1355211381u, 1713229535u, 2266063952u, 4154537707u, 2169838150u, 1879598228u, 1242425452u, 3123234769u, 81298u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 243000320u, 1942574651u, 3493125164u, 772142514u, 2592899500u, 3293730476u, 2343912942u, 3591028398u, 924711991u, 2623408477u, 1691411421u, 667211928u, 4247393465u, 1185803043u, 2890671411u, 223545029u, 1616113101u, 3834319932u, 1167576620u, 812987u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 2430003200u, 2245877326u, 571513276u, 3426457852u, 159191225u, 2872533694u, 1964292947u, 1550545617u, 657185326u, 464280996u, 4029212328u, 2377151987u, 3819228987u, 3268095847u, 3136910336u, 2235450296u, 3276229122u, 3983460955u, 3085831616u, 8129872u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 2825195520u, 983936785u, 1420165469u, 4199807449u, 1591912257u, 2955533164u, 2463060292u, 2620554286u, 2276885967u, 347842665u, 1637417617u, 2296683399u, 3832551507u, 2616187406u, 1304332295u, 879666487u, 2697520153u, 1179903893u, 793545097u, 81298727u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 2482151424u, 1249433264u, 1316752804u, 3343368829u, 3034220691u, 3785527867u, 3155766446u, 435739089u, 1294023196u, 3478426655u, 3489274282u, 1491997513u, 3965776707u, 392070292u, 158421068u, 206730281u, 1205397756u, 3209104344u, 3640483676u, 812987271u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 3346677760u, 3904398053u, 282626154u, 3368917221u, 277435845u, 3495540309u, 1492893396u, 62423601u, 55330073u, 424528185u, 533004460u, 2035073250u, 1003061409u, 3920702929u, 1584210680u, 2067302810u, 3464042968u, 2026272370u, 2045098399u, 3834905422u, 1u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 3402006528u, 389274873u, 2826261549u, 3624401138u, 2774358457u, 595664722u, 2044032080u, 624236013u, 553300730u, 4245281850u, 1035077304u, 3170863317u, 1440679502u, 552323628u, 2957204921u, 3493158919u, 280691316u, 3082854524u, 3271114810u, 3989315856u, 18u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 3955294208u, 3892748737u, 2492811714u, 1884273018u, 1973780802u, 1661679930u, 3260451617u, 1947392838u, 1238040005u, 3798112837u, 1760838457u, 1643862100u, 1521893139u, 1228268987u, 3802245435u, 571850828u, 2806913168u, 763774168u, 2646377035u, 1238452903u, 189u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 898236416u, 272781715u, 3453280669u, 1662861001u, 2557938840u, 3731897416u, 2539745101u, 2294059203u, 3790465462u, 3621390004u, 428515394u, 3553719116u, 2334029505u, 3692755281u, 3662715984u, 1423540992u, 2299327905u, 3342774390u, 693966575u, 3794594444u, 1892u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 392429568u, 2727817152u, 173068322u, 3743708130u, 4104551923u, 2959235797u, 3922614538u, 1465755555u, 3544916257u, 1854161680u, 4285153948u, 1177452792u, 1865458578u, 2567814447u, 2267421480u, 1350508040u, 1518442573u, 3362972833u, 2644698461u, 3586206073u, 18928u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 3924295680u, 1508367744u, 1730683226u, 3077342932u, 2390813574u, 3822554203u, 571439722u, 1772653671u, 1089424205u, 1361747624u, 4196833820u, 3184593337u, 1474716598u, 4203307994u, 1199378325u, 620178517u, 2299523845u, 3564957261u, 677180841u, 1502322368u, 189288u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 588251136u, 2198775561u, 126963079u, 708658252u, 2433299267u, 3865803667u, 1419429932u, 546667527u, 2304307462u, 732574354u, 3313632539u, 1781162307u, 1862264099u, 3378374279u, 3403848667u, 1906817876u, 1520401971u, 1289834247u, 2476841122u, 2138321793u, 1892883u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 1587544064u, 512919131u, 1269630795u, 2791615224u, 2858156191u, 3331011u, 1309397441u, 1171707977u, 1568238141u, 3030776249u, 3071554319u, 631753893u, 1442771810u, 3718971722u, 3973715605u, 1888309583u, 2319117826u, 13440585u, 3293574743u, 4203348751u, 18928834u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 2990538752u, 834224017u, 4106373359u, 2146348466u, 2811758140u, 33310116u, 209072522u, 3127145181u, 2797479524u, 242991421u, 650772125u, 2022571641u, 1542816213u, 2829978855u, 1082450394u, 1703226655u, 1716341784u, 134405855u, 2870976358u, 3378781853u, 189288349u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 4135583744u, 4047272880u, 2409027927u, 4283615485u, 2347777628u, 333101166u, 2090725220u, 1206680738u, 2204991471u, 2429914216u, 2212753954u, 3045847227u, 2543260246u, 2529984777u, 2234569354u, 4147364664u, 4278515955u, 1344058553u, 2939959804u, 3723047464u, 1892883497u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 2701131776u, 1818023145u, 2615442799u, 4181449191u, 2002939809u, 3331011665u, 3727383016u, 3476872792u, 575078232u, 2824305685u, 652703065u, 393701203u, 3957765987u, 3825011295u, 870857065u, 2818940981u, 4130453895u, 555683651u, 3629794267u, 2870736278u, 1748965794u, 4u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 1241513984u, 1000362272u, 384624218u, 3159786252u, 2849528915u, 3245345582u, 2914091799u, 408989560u, 1455815032u, 2473253075u, 2232063360u, 3937012031u, 922954206u, 3890374591u, 118636066u, 2419606036u, 2649833292u, 1261869223u, 1938204303u, 2937559012u, 309788762u, 44u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 3825205248u, 1413688130u, 3846242182u, 1533091448u, 2725485381u, 2388684754u, 3371114221u, 4089895606u, 1673248432u, 3257694273u, 845797125u, 715414651u, 639607477u, 249040248u, 1186360669u, 2721223880u, 728529149u, 4028757644u, 2202173848u, 3605786348u, 3097887626u, 440u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 3892314112u, 1251979420u, 4102683455u, 2446012600u, 1485050037u, 2412011066u, 3646371143u, 2244250403u, 3847582441u, 2512171661u, 4163003961u, 2859179215u, 2101107475u, 2490402481u, 3273672098u, 1442435026u, 2990324200u, 1632870777u, 546902009u, 1698125117u, 914105196u, 4407u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 268435456u, 3929859617u, 2372128888u, 2985289529u, 1965598487u, 2645274183u, 2103973067u, 967667558u, 4116086047u, 3646880138u, 2975333951u, 2821988383u, 3831205572u, 3429188334u, 2671949913u, 1539448379u, 4133438227u, 3443805888u, 1174052797u, 4096349283u, 551117371u, 44072u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 2684354560u, 643890506u, 2246452409u, 4083091519u, 2476115692u, 682938058u, 3859861492u, 1086740992u, 2506154808u, 2109063021u, 3983535742u, 2450080060u, 3952317358u, 4227112276u, 949695361u, 2509581908u, 2679676609u, 78320521u, 3150593386u, 2308787168u, 1216206423u, 440721u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 1073741824u, 2143937770u, 989687611u, 2176209531u, 3286320449u, 2534413289u, 4238876553u, 2277475336u, 3586711602u, 3910761031u, 1180651760u, 3025964129u, 868467921u, 3616417105u, 907019027u, 3620982602u, 1026962319u, 783205216u, 1441162788u, 1613035207u, 3572129643u, 4407212u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 2147483648u, 4259508518u, 1306941522u, 287258832u, 2798433423u, 3869296417u, 3734059871u, 1299916889u, 1507377657u, 452904654u, 3216583017u, 194870220u, 94744625u, 1804432684u, 480255686u, 1850087654u, 1679688606u, 3537084866u, 1526725993u, 3245450185u, 1361558065u, 44072128u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 3940379521u, 184513341u, 2872588323u, 2214530454u, 38258512u, 2980860351u, 114267010u, 2188874685u, 234079247u, 2101059099u, 1948702207u, 947446250u, 864457656u, 507589568u, 1321007357u, 3911984176u, 1011110295u, 2382358050u, 2389730781u, 730678769u, 440721283u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 749089546u, 1845133419u, 2956079454u, 670468066u, 382585125u, 4038799734u, 1142670106u, 413910370u, 2340792475u, 3830721806u, 2307152890u, 884527912u, 54641970u, 780928386u, 325171683u, 465136099u, 1521168367u, 2348744022u, 2422471335u, 3011820399u, 112245535u, 1u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 3195928164u, 1271465007u, 3790990768u, 2409713370u, 3825851251u, 1733291676u, 2836766477u, 4139103702u, 1933088270u, 3947479697u, 1596692428u, 255344533u, 546419702u, 3514316564u, 3251716831u, 356393694u, 2326781783u, 2012603743u, 2749876875u, 53432923u, 1122455357u, 10u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 1894510568u, 4124715485u, 3550169314u, 2622297228u, 3898774147u, 153047584u, 2597860998u, 2736331362u, 2151013525u, 820091310u, 3082022401u, 2553445333u, 1169229724u, 783427273u, 2452397246u, 3563936947u, 1792981350u, 2946168251u, 1728964978u, 534329236u, 2634618978u, 102u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 1765236496u, 2592449190u, 1141954781u, 453168512u, 333035812u, 1530475849u, 208806204u, 1593509850u, 35298776u, 3905945809u, 755452939u, 4059616857u, 3102362653u, 3539305436u, 3049135981u, 1279631107u, 749944324u, 3691878738u, 109780602u, 1048325068u, 576386005u, 1026u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 472495776u, 154688128u, 2829613224u, 236717826u, 3330358121u, 2419856602u, 2088062043u, 3050196612u, 352987763u, 404752426u, 3259562103u, 1941462907u, 958855467u, 1033315999u, 426588746u, 4206376485u, 3204475946u, 2559049013u, 1097806028u, 1893316088u, 1468892756u, 10261u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 429990464u, 1546881281u, 2526328464u, 2367178266u, 3238810138u, 2723729547u, 3700751251u, 437195052u, 3529877637u, 4047524260u, 2530849958u, 2234759893u, 998620082u, 1743225400u, 4265887462u, 3409059186u, 1979988397u, 4115653657u, 2388125693u, 1753291698u, 1804025676u, 102613u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 4937344u, 2583910923u, 3788448163u, 2196946185u, 2323330313u, 1467491701u, 2647774148u, 76983232u, 939038003u, 1820536944u, 3833663109u, 872762455u, 1396266233u, 252384818u, 4004168960u, 4025820797u, 2620014793u, 2501830910u, 2406420459u, 353047801u, 860387580u, 1026134u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 49373440u, 69305454u, 3524743268u, 494625378u, 1758466655u, 1790015127u, 707937707u, 769832326u, 800445438u, 1025500258u, 3976892726u, 137689966u, 1077760444u, 2523848183u, 1386983936u, 1603502315u, 430344163u, 3543472626u, 2589368115u, 3530478015u, 13941208u, 10261342u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 493734400u, 693054540u, 887694312u, 651286492u, 404797367u, 720282090u, 2784409778u, 3403355965u, 3709487085u, 1665067989u, 1114221598u, 1376899669u, 2187669848u, 3763645352u, 984937477u, 3150121265u, 8474337u, 1074987893u, 123877382u, 945041788u, 139412088u, 102613420u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 642376704u, 2635578105u, 287008529u, 2217897626u, 4047973671u, 2907853604u, 2074294005u, 3968788584u, 2735132489u, 3765778010u, 2552281391u, 884094804u, 401862003u, 3276715157u, 1259440186u, 1436441580u, 84743377u, 2159944338u, 1238773822u, 860483288u, 1394120882u, 1026134200u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 2128799744u, 585977275u, 2870085296u, 704139780u, 1825031051u, 3308732273u, 3563070872u, 1033180180u, 1581521123u, 3298041738u, 4047977438u, 251013453u, 4018620032u, 2702380498u, 4004467275u, 1479513914u, 847433773u, 124606900u, 3797803633u, 14898290u, 1056306934u, 1671407411u, 2u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 4108128256u, 1564805458u, 2931049185u, 2746430510u, 1070441327u, 3022551662u, 1270970359u, 1741867216u, 2930309344u, 2915646311u, 1825068723u, 2510134539u, 1531494656u, 1254001213u, 1389967092u, 1910237261u, 4179370437u, 1246069001u, 3618297962u, 148982908u, 1973134748u, 3829172224u, 23u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 2426576896u, 2763152701u, 3540688077u, 1694501330u, 2114478684u, 160745550u, 4119769005u, 238802978u, 3533289668u, 3386659340u, 1070818052u, 3626508914u, 2430044677u, 3950077541u, 1014769034u, 1922503429u, 3138998710u, 3870755427u, 1823241254u, 1489829088u, 2551478296u, 3931983876u, 238u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 2790932480u, 1861723239u, 1047142408u, 4060111420u, 3964917659u, 1607455504u, 2542984386u, 2388029789u, 973158312u, 3801822336u, 2118245935u, 1905350774u, 2825610298u, 846069751u, 1557755757u, 2045165108u, 1325216032u, 52848613u, 1052543365u, 2013388996u, 4039946483u, 665133101u, 2389u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 2139521024u, 1437363212u, 1881489492u, 1946408538u, 994470935u, 3189653161u, 3955007383u, 2405461415u, 1141648533u, 3658484994u, 4002590174u, 1873638560u, 2486299208u, 4165730220u, 2692655683u, 3271781899u, 367258436u, 528486133u, 1935499058u, 2954020778u, 1744759170u, 2356363723u, 23891u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 4215341056u, 1488730236u, 1635025739u, 2284216200u, 1354774762u, 1831760540u, 895368173u, 2579777679u, 2826550743u, 2225111574u, 1371196084u, 1556516425u, 3388155604u, 3002596541u, 1156753063u, 2653047924u, 3672584367u, 989894034u, 2175121397u, 3770404008u, 267722522u, 2088800754u, 238915u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 3498704896u, 2002400481u, 3465355505u, 1367325523u, 662845737u, 1137736219u, 363747142u, 27973016u, 2495703660u, 776279266u, 827058957u, 2680262365u, 3816784971u, 4256161641u, 2977596044u, 760675466u, 2366105308u, 1309005756u, 276377492u, 3344301717u, 2677225228u, 3708138356u, 2389154u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 627310592u, 2844135634u, 293816686u, 788353350u, 2333490077u, 2787427599u, 3637471422u, 279730160u, 3482200120u, 3467825369u, 3975622275u, 1032819875u, 3808111348u, 3906910754u, 4006156673u, 3311787370u, 2186216601u, 205155677u, 2763774923u, 3378246098u, 1002448511u, 2721645198u, 23891548u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 1978138624u, 2671552565u, 2938166866u, 3588566204u, 1860064291u, 2104472219u, 2014975858u, 2797301608u, 462262832u, 318515330u, 1101517094u, 1738264167u, 3721375114u, 414401884u, 1406861075u, 3053102637u, 387329537u, 2051556775u, 1867945454u, 3717689914u, 1434550525u, 1446648206u, 238915486u], [0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 2601517056u, 945721878u, 3611864890u, 1525923678u, 1420773734u, 3864853010u, 2969889400u, 2203212308u, 327661030u, 3185153301u, 2425236348u, 202772488u, 2854012776u, 4144018848u, 1183708862u, 466255301u, 3873295377u, 3335698566u, 1499585360u, 2817160776u, 1460603370u, 1581580175u, 2389154863u]]"
   },
   {
    "name" : "_arraySliceSliceOrass_k",
    "kind" : "function",
    "deco" : "UNaNbNiNeAkxAkZAk",
    "originalType" : "pure nothrow @nogc @trusted extern (C) uint[](uint[] p1, const const(uint)[] p0)",
    "parameters" : [
     {
      "name" : "p1",
      "deco" : "Ak"
     },
     {
      "name" : "p0",
      "deco" : "xAk"
     }
    ]
   },
   {
    "name" : "_arraySliceSliceAndass_k",
    "kind" : "function",
    "deco" : "UNaNbNiNeAkxAkZAk",
    "originalType" : "pure nothrow @nogc @trusted extern (C) uint[](uint[] p1, const const(uint)[] p0)",
    "parameters" : [
     {
      "name" : "p1",
      "deco" : "Ak"
     },
     {
      "name" : "p0",
      "deco" : "xAk"
     }
    ]
   },
   {
    "name" : "_arraySliceSliceXorass_k",
    "kind" : "function",
    "deco" : "UNaNbNiNeAkxAkZAk",
    "originalType" : "pure nothrow @nogc @trusted extern (C) uint[](uint[] p1, const const(uint)[] p0)",
    "parameters" : [
     {
      "name" : "p1",
      "deco" : "Ak"
     },
     {
      "name" : "p0",
      "deco" : "xAk"
     }
    ]
   },
   {
    "name" : "_arraySliceComSliceAssign_k",
    "kind" : "function",
    "deco" : "UNaNbNiNeAkxAkZAk",
    "originalType" : "pure nothrow @nogc @trusted extern (C) uint[](uint[] p1, const uint[] p0)",
    "parameters" : [
     {
      "name" : "p1",
      "deco" : "Ak"
     },
     {
      "name" : "p0",
      "deco" : "xAk"
     }
    ]
   }
  ]
 },
 {
  "name" : "numerics.internal.chars",
  "kind" : "module",
  "file" : "numerics\\internal\\chars.d",
  "members" : [
   {
    "name" : "std.traits",
    "kind" : "import",
    "line" : 3,
    "char" : 8,
    "protection" : "private",
    "selective" : [
     "isSomeChar",
     "Unqual"
    ]
   },
   {
    "name" : "std.array",
    "kind" : "import",
    "line" : 4,
    "char" : 8,
    "protection" : "private"
   },
   {
    "kind" : "template",
    "line" : 7,
    "char" : 3,
    "name" : "digitToChar2",
    "parameters" : [
     {
      "name" : "C",
      "kind" : "type"
     }
    ],
    "constraint" : "isSomeChar!C",
    "members" : [
     {
      "name" : "digitToChar2",
      "kind" : "function",
      "line" : 7,
      "char" : 3,
      "type" : "pure nothrow @nogc @safe C(const uint digit, const bool uppercase = true)",
      "parameters" : [
       {
        "name" : "digit",
        "deco" : "k",
        "storageClass" : [
         "const"
        ]
       },
       {
        "name" : "uppercase",
        "deco" : "b",
        "storageClass" : [
         "const"
        ],
        "default" : "true"
       }
      ],
      "endline" : 13,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "line" : 16,
    "char" : 3,
    "name" : "digitToChar",
    "parameters" : [
     {
      "name" : "C",
      "kind" : "type"
     }
    ],
    "constraint" : "isSomeChar!C",
    "members" : [
     {
      "name" : "digitToChar",
      "kind" : "function",
      "line" : 16,
      "char" : 3,
      "type" : "pure nothrow @nogc @safe C(const uint digit, const bool uppercase = true)",
      "parameters" : [
       {
        "name" : "digit",
        "deco" : "k",
        "storageClass" : [
         "const"
        ]
       },
       {
        "name" : "uppercase",
        "deco" : "b",
        "storageClass" : [
         "const"
        ],
        "default" : "true"
       }
      ],
      "endline" : 21,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "line" : 24,
    "char" : 5,
    "name" : "charToDigit",
    "parameters" : [
     {
      "name" : "C",
      "kind" : "type"
     }
    ],
    "constraint" : "isSomeChar!C",
    "members" : [
     {
      "name" : "charToDigit",
      "kind" : "function",
      "line" : 24,
      "char" : 5,
      "type" : "pure nothrow @nogc @safe int(const C c, const uint radix)",
      "parameters" : [
       {
        "name" : "c",
        "type" : "C",
        "storageClass" : [
         "const"
        ]
       },
       {
        "name" : "radix",
        "deco" : "k",
        "storageClass" : [
         "const"
        ]
       }
      ],
      "endline" : 38,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "line" : 40,
    "char" : 1,
    "name" : "BufferedRange",
    "parameters" : [
     {
      "name" : "C",
      "kind" : "type"
     },
     {
      "name" : "size",
      "kind" : "value",
      "deco" : "k"
     }
    ],
    "members" : [
     {
      "name" : "BufferedRange",
      "kind" : "struct",
      "line" : 40,
      "char" : 1,
      "members" : [
       {
        "name" : "lo",
        "kind" : "variable",
        "line" : 45,
        "char" : 15,
        "type" : "ptrdiff_t",
        "init" : "-1"
       },
       {
        "name" : "hi",
        "kind" : "variable",
        "line" : 45,
        "char" : 24,
        "type" : "ptrdiff_t",
        "init" : "-1"
       },
       {
        "name" : "buffer",
        "kind" : "variable",
        "line" : 46,
        "char" : 20,
        "type" : "Unqual!C[size]",
        "init" : "void"
       },
       {
        "name" : "empty",
        "kind" : "function",
        "line" : 47,
        "char" : 20,
        "type" : "@property bool()",
        "endline" : 47,
        "endchar" : 46
       },
       {
        "name" : "front",
        "kind" : "function",
        "line" : 48,
        "char" : 17,
        "type" : "@property C()",
        "endline" : 48,
        "endchar" : 46
       },
       {
        "name" : "back",
        "kind" : "function",
        "line" : 49,
        "char" : 17,
        "type" : "@property C()",
        "endline" : 49,
        "endchar" : 45
       },
       {
        "name" : "popFront",
        "kind" : "function",
        "line" : 50,
        "char" : 10,
        "type" : "void()",
        "endline" : 50,
        "endchar" : 29
       },
       {
        "name" : "popBack",
        "kind" : "function",
        "line" : 51,
        "char" : 10,
        "type" : "void()",
        "endline" : 51,
        "endchar" : 28
       }
      ]
     }
    ]
   }
  ]
 },
 {
  "name" : "numerics.internal.floats",
  "kind" : "module",
  "file" : "numerics\\internal\\floats.d",
  "members" : [
   {
    "name" : "numerics.internal.integrals",
    "kind" : "import",
    "line" : 3,
    "char" : 8,
    "protection" : "private",
    "selective" : [
     "clz"
    ]
   },
   {
    "name" : "FU",
    "kind" : "union",
    "protection" : "private",
    "line" : 5,
    "char" : 9,
    "members" : [
     {
      "name" : "f",
      "kind" : "variable",
      "line" : 7,
      "char" : 11,
      "deco" : "f",
      "offset" : 0
     },
     {
      "name" : "u",
      "kind" : "variable",
      "line" : 8,
      "char" : 10,
      "deco" : "k",
      "offset" : 0
     }
    ]
   },
   {
    "name" : "fpack",
    "kind" : "function",
    "comment" : "packs a float value\n",
    "line" : 13,
    "char" : 7,
    "deco" : "FNaNbNiNfxbikZf",
    "originalType" : "pure nothrow @nogc @safe float(const bool sign, int exp, uint mantissa)",
    "parameters" : [
     {
      "name" : "sign",
      "deco" : "xb"
     },
     {
      "name" : "exp",
      "deco" : "i"
     },
     {
      "name" : "mantissa",
      "deco" : "k"
     }
    ],
    "endline" : 54,
    "endchar" : 1
   },
   {
    "name" : "funpack",
    "kind" : "function",
    "comment" : "unpacks a float value\n",
    "line" : 58,
    "char" : 6,
    "deco" : "FNaNbNiNfxfJiJkJbJbZb",
    "originalType" : "pure nothrow @nogc @safe bool(const float f, out int exp, out uint mantissa, out bool inf, out bool nan)",
    "parameters" : [
     {
      "name" : "f",
      "deco" : "xf"
     },
     {
      "name" : "exp",
      "deco" : "i",
      "storageClass" : [
       "out"
      ]
     },
     {
      "name" : "mantissa",
      "deco" : "k",
      "storageClass" : [
       "out"
      ]
     },
     {
      "name" : "inf",
      "deco" : "b",
      "storageClass" : [
       "out"
      ]
     },
     {
      "name" : "nan",
      "deco" : "b",
      "storageClass" : [
       "out"
      ]
     }
    ],
    "endline" : 84,
    "endchar" : 1
   },
   {
    "name" : "DU",
    "kind" : "union",
    "protection" : "private",
    "line" : 87,
    "char" : 9,
    "members" : [
     {
      "name" : "d",
      "kind" : "variable",
      "line" : 89,
      "char" : 12,
      "deco" : "d",
      "offset" : 0
     },
     {
      "name" : "u",
      "kind" : "variable",
      "line" : 90,
      "char" : 11,
      "deco" : "m",
      "offset" : 0
     }
    ]
   },
   {
    "name" : "dpack",
    "kind" : "function",
    "comment" : "packs a double value\n",
    "line" : 95,
    "char" : 8,
    "deco" : "FNaNbNiNfxbimZd",
    "originalType" : "pure nothrow @nogc @safe double(const bool sign, int exp, ulong mantissa)",
    "parameters" : [
     {
      "name" : "sign",
      "deco" : "xb"
     },
     {
      "name" : "exp",
      "deco" : "i"
     },
     {
      "name" : "mantissa",
      "deco" : "m"
     }
    ],
    "endline" : 137,
    "endchar" : 1
   },
   {
    "name" : "dunpack",
    "kind" : "function",
    "comment" : "unpacks a double value\n",
    "line" : 141,
    "char" : 6,
    "deco" : "FNaNbNiNfxdJiJmJbJbZb",
    "originalType" : "pure nothrow @nogc @safe bool(const double d, out int exp, out ulong mantissa, out bool inf, out bool nan)",
    "parameters" : [
     {
      "name" : "d",
      "deco" : "xd"
     },
     {
      "name" : "exp",
      "deco" : "i",
      "storageClass" : [
       "out"
      ]
     },
     {
      "name" : "mantissa",
      "deco" : "m",
      "storageClass" : [
       "out"
      ]
     },
     {
      "name" : "inf",
      "deco" : "b",
      "storageClass" : [
       "out"
      ]
     },
     {
      "name" : "nan",
      "deco" : "b",
      "storageClass" : [
       "out"
      ]
     }
    ],
    "endline" : 168,
    "endchar" : 1
   },
   {
    "name" : "RU",
    "kind" : "union",
    "protection" : "private",
    "line" : 170,
    "char" : 9,
    "members" : [
     {
      "name" : "r",
      "kind" : "variable",
      "line" : 172,
      "char" : 10,
      "deco" : "e",
      "offset" : 0
     },
     {
      "name" : "e",
      "kind" : "variable",
      "line" : 175,
      "char" : 16,
      "deco" : "t",
      "offset" : 0,
      "align" : 1
     },
     {
      "name" : "m",
      "kind" : "variable",
      "line" : 176,
      "char" : 15,
      "deco" : "m",
      "offset" : 2,
      "align" : 1
     }
    ]
   },
   {
    "name" : "rpack",
    "kind" : "function",
    "comment" : "packs a real80 value\n",
    "line" : 182,
    "char" : 6,
    "deco" : "FNaNbNiNfxbimZe",
    "originalType" : "pure nothrow @nogc @safe real(const bool sign, int exp, ulong mantissa)",
    "parameters" : [
     {
      "name" : "sign",
      "deco" : "xb"
     },
     {
      "name" : "exp",
      "deco" : "i"
     },
     {
      "name" : "mantissa",
      "deco" : "m"
     }
    ],
    "endline" : 215,
    "endchar" : 1
   },
   {
    "name" : "runpack",
    "kind" : "function",
    "comment" : "unpacks a real80 value\n",
    "line" : 220,
    "char" : 6,
    "deco" : "FNaNbNiNfxeJiJmJbJbZb",
    "originalType" : "pure nothrow @nogc @safe bool(const real r, out int exp, out ulong mantissa, out bool inf, out bool nan)",
    "parameters" : [
     {
      "name" : "r",
      "deco" : "xe"
     },
     {
      "name" : "exp",
      "deco" : "i",
      "storageClass" : [
       "out"
      ]
     },
     {
      "name" : "mantissa",
      "deco" : "m",
      "storageClass" : [
       "out"
      ]
     },
     {
      "name" : "inf",
      "deco" : "b",
      "storageClass" : [
       "out"
      ]
     },
     {
      "name" : "nan",
      "deco" : "b",
      "storageClass" : [
       "out"
      ]
     }
    ],
    "endline" : 246,
    "endchar" : 1
   }
  ]
 },
 {
  "name" : "numerics.internal.integrals",
  "kind" : "module",
  "file" : "numerics\\internal\\integrals.d",
  "comment" : " Unsigned integer functions\n\n Copyright: Copyright Răzvan Ștefănescu 2016.\n License:   $(WEB www.boost.org/LICENSE_1_0.txt, Boost License 1.0).\n Authors:   Răzvan Ștefănescu\n Source:    $(NUMERICSSRC internal/integrals.d)\n",
  "members" : [
   {
    "name" : "core.bitop",
    "kind" : "import",
    "line" : 11,
    "char" : 16,
    "protection" : "private",
    "selective" : [
     "bsr",
     "bsf"
    ]
   },
   {
    "name" : "ispow2",
    "kind" : "function",
    "comment" : "returns true if x is a power of 2\n",
    "line" : 16,
    "char" : 6,
    "deco" : "FNaNbNiNfxkZb",
    "originalType" : "pure nothrow @nogc @safe bool(const uint x)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "xk"
     }
    ],
    "endline" : 19,
    "endchar" : 1
   },
   {
    "name" : "ispow2",
    "kind" : "function",
    "comment" : "returns true if x is a power of 2\n",
    "line" : 24,
    "char" : 6,
    "deco" : "FNaNbNiNfxmZb",
    "originalType" : "pure nothrow @nogc @safe bool(const ulong x)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "xm"
     }
    ],
    "endline" : 27,
    "endchar" : 1
   },
   {
    "name" : "clz",
    "kind" : "function",
    "comment" : "counts leading zeros\n",
    "line" : 31,
    "char" : 6,
    "storageClass" : [
     "auto"
    ],
    "deco" : "FNaNbNiNfxkZi",
    "originalType" : "pure nothrow @nogc @safe (const uint x)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "xk"
     }
    ],
    "endline" : 34,
    "endchar" : 1
   },
   {
    "name" : "clz",
    "kind" : "function",
    "comment" : "counts leading zeros\n",
    "line" : 38,
    "char" : 6,
    "storageClass" : [
     "auto"
    ],
    "deco" : "FNaNbNiNfxmZi",
    "originalType" : "pure nothrow @nogc @safe (const ulong x)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "xm"
     }
    ],
    "endline" : 54,
    "endchar" : 1
   },
   {
    "name" : "ctz",
    "kind" : "function",
    "comment" : "counts trailing zeros in a int\n",
    "line" : 59,
    "char" : 6,
    "storageClass" : [
     "auto"
    ],
    "deco" : "FNaNbNiNfxkZi",
    "originalType" : "pure nothrow @nogc @safe (const uint x)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "xk"
     }
    ],
    "endline" : 62,
    "endchar" : 1
   },
   {
    "name" : "ctz",
    "kind" : "function",
    "comment" : "counts trailing zeros in a long\n",
    "line" : 66,
    "char" : 6,
    "storageClass" : [
     "auto"
    ],
    "deco" : "FNaNbNiNfxmZi",
    "originalType" : "pure nothrow @nogc @safe (const ulong x)",
    "parameters" : [
     {
      "name" : "x",
      "deco" : "xm"
     }
    ],
    "endline" : 82,
    "endchar" : 1
   },
   {
    "name" : "digits10",
    "kind" : "function",
    "line" : 85,
    "char" : 6,
    "storageClass" : [
     "auto"
    ],
    "deco" : "FNaNbNiNfxkZi",
    "originalType" : "(const uint v)",
    "parameters" : [
     {
      "name" : "v",
      "deco" : "xk"
     }
    ],
    "endline" : 96,
    "endchar" : 1
   }
  ]
 },
 {
  "name" : "numerics.internal.strings",
  "kind" : "module",
  "file" : "numerics\\internal\\strings.d",
  "members" : [
   {
    "name" : "std.traits",
    "kind" : "import",
    "line" : 3,
    "char" : 8,
    "protection" : "private",
    "selective" : [
     "isSomeChar",
     "isSomeString"
    ]
   },
   {
    "name" : "std.range.primitives",
    "kind" : "import",
    "line" : 4,
    "char" : 8,
    "protection" : "private",
    "selective" : [
     "isInputRange",
     "ElementType"
    ]
   },
   {
    "name" : "Header",
    "kind" : "enum",
    "line" : 6,
    "char" : 1,
    "baseDeco" : "i",
    "members" : [
     {
      "name" : "none",
      "kind" : "enum member",
      "value" : "0",
      "line" : 8,
      "char" : 5
     },
     {
      "name" : "plus",
      "kind" : "enum member",
      "value" : "1",
      "line" : 9,
      "char" : 5
     },
     {
      "name" : "minus",
      "kind" : "enum member",
      "value" : "2",
      "line" : 10,
      "char" : 5
     },
     {
      "name" : "hex",
      "kind" : "enum member",
      "value" : "4",
      "line" : 11,
      "char" : 5
     },
     {
      "name" : "oct",
      "kind" : "enum member",
      "value" : "8",
      "line" : 12,
      "char" : 5
     },
     {
      "name" : "bin",
      "kind" : "enum member",
      "value" : "16",
      "line" : 13,
      "char" : 5
     },
     {
      "name" : "zero",
      "kind" : "enum member",
      "value" : "32",
      "line" : 14,
      "char" : 5
     },
     {
      "name" : "any",
      "kind" : "enum member",
      "value" : "31",
      "line" : 15,
      "char" : 5
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "detects a string header\n",
    "line" : 20,
    "char" : 8,
    "name" : "detect",
    "parameters" : [
     {
      "name" : "S",
      "kind" : "type"
     }
    ],
    "constraint" : "isSomeString!S",
    "members" : [
     {
      "name" : "detect",
      "kind" : "function",
      "line" : 20,
      "char" : 8,
      "type" : "pure nothrow @nogc @safe Header(const Header expected, auto ref const S s, ref size_t index)",
      "parameters" : [
       {
        "name" : "expected",
        "type" : "Header",
        "storageClass" : [
         "const"
        ]
       },
       {
        "name" : "s",
        "type" : "S",
        "storageClass" : [
         "auto",
         "const",
         "ref"
        ]
       },
       {
        "name" : "index",
        "type" : "size_t",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 80,
      "endchar" : 1
     }
    ]
   }
  ]
 },
 {
  "name" : "numerics.fixed",
  "kind" : "module",
  "file" : "numerics\\fixed.d",
  "comment" : "\n Copyright: Copyright Răzvan Ștefănescu 2016\n\n License: $(LINK2 boost.org/LICENSE_1_0.txt, Boost License 1.0).\n\n Authors: $(LINK2 rumbu.ro, Răzvan Ștefănescu)\n\n Source: $(GITHUBREF src/numerics/_fixed.d, fixed.d)\n\n Macros:\n   LOCALREF   = <a href=\"#$0\">$0</a>\n   LOCALMREF  = <a href=\"#$1.$2\">$2</a>\n   LOCALMREF2 = <a href=\"#$1.$2\">$3</a>\n   PHOBOSREF  = <a href=\"https://dlang.org/phobos/std_$1.html#$2\">$2</a>\n   GITHUBREF  = <a href=\"https://github.com/rumbu13/numerics/blob/master/$1\">$+</a>\n\n   DDOC = <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n           <html>\n           <head>\n            <meta charset=\"utf-8\">\n           <title>$(TITLE)</title>\n           <link rel=\"stylesheet\" href=\"https://dlang.org/css/codemirror.css\">\n           <link rel=\"stylesheet\" href=\"https://dlang.org/css/style.css\">\n           <link rel=\"stylesheet\" href=\"https://dlang.org/css/print.css\" media=\"print\">\n           <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=0.1, maximum-scale=10.0\">\n           </head>\n           <body>\n           <h1>$(TITLE)</h1>\n           $(BODY)\n           </body></html>\n",
  "members" : [
   {
    "name" : "std.traits",
    "kind" : "import",
    "line" : 38,
    "char" : 15,
    "selective" : [
     "isIntegral",
     "isSomeChar",
     "isSomeString",
     "isFloatingPoint",
     "Unqual",
     "isSigned",
     "isUnsigned",
     "Unsigned",
     "Signed",
     "isArray",
     "isScalarType",
     "isIterable",
     "ForeachType"
    ]
   },
   {
    "name" : "std.format",
    "kind" : "import",
    "line" : 40,
    "char" : 15,
    "selective" : [
     "FormatSpec",
     "FormatException",
     "format"
    ]
   },
   {
    "name" : "std.conv",
    "kind" : "import",
    "line" : 41,
    "char" : 15,
    "selective" : [
     "ConvException",
     "ConvOverflowException"
    ]
   },
   {
    "name" : "std.ascii",
    "kind" : "import",
    "line" : 42,
    "char" : 15,
    "selective" : [
     "LetterCase"
    ]
   },
   {
    "name" : "core.stdc.string",
    "kind" : "import",
    "line" : 43,
    "char" : 8,
    "protection" : "private",
    "selective" : [
     "memcpy"
    ]
   },
   {
    "name" : "numerics.internal.chars",
    "kind" : "import",
    "line" : 45,
    "char" : 16,
    "protection" : "private"
   },
   {
    "name" : "numerics.internal.strings",
    "kind" : "import",
    "line" : 46,
    "char" : 16,
    "protection" : "private"
   },
   {
    "name" : "numerics.internal.integrals",
    "kind" : "import",
    "line" : 47,
    "char" : 16,
    "protection" : "private"
   },
   {
    "name" : "numerics.internal.arrays",
    "kind" : "import",
    "line" : 48,
    "char" : 16,
    "protection" : "private"
   },
   {
    "name" : "numerics.internal.floats",
    "kind" : "import",
    "line" : 49,
    "char" : 16,
    "protection" : "private"
   },
   {
    "name" : "std.math",
    "kind" : "import",
    "line" : 50,
    "char" : 16,
    "protection" : "private",
    "selective" : [
     "LOG2",
     "ceil"
    ]
   },
   {
    "name" : "ispow2",
    "kind" : "alias",
    "protection" : "private",
    "line" : 52,
    "char" : 9
   },
   {
    "name" : "clz",
    "kind" : "alias",
    "protection" : "private",
    "line" : 53,
    "char" : 9
   },
   {
    "name" : "ctz",
    "kind" : "alias",
    "protection" : "private",
    "line" : 54,
    "char" : 9
   },
   {
    "name" : "ispow2",
    "kind" : "alias",
    "protection" : "private",
    "line" : 56,
    "char" : 9
   },
   {
    "name" : "clz",
    "kind" : "alias",
    "protection" : "private",
    "line" : 57,
    "char" : 9
   },
   {
    "name" : "ctz",
    "kind" : "alias",
    "protection" : "private",
    "line" : 58,
    "char" : 9
   },
   {
    "kind" : "template",
    "comment" : "\n\n The FixedInt type is a type that represents a fixed size integer.\n FixedInt type implements all the arithmentic operations specific to\n other integral types\n Params:\n  bits   =   type size, all positive multiples of 32 are accepted, except 32\n             and 64 because these are equivalent to builtin types\n             $(D_KEYWORD int) and $(D_KEYWORD long) and respectively\n             $(D_KEYWORD uint) and $(D_KEYWORD ulong)\n  signed =   indicates if the type supports negative values, defaults to\n             true; negative values are encoded using two's complement\n Usage:\n ---\n   alias uint128 = FixedInt!(128, false);\n   alias int96 = FixedInt!(96, true);\n   alias int128 = FixedInt!128;\n   alias uint1024 = FixedInt!(1024, false);\n\n   uint128 a = 10;\n   auto b = int96(\"12345678901234567890123456789\");\n ---\n Members:\n   $(LOCALMREF _FixedInt,max),\n   $(LOCALMREF _FixedInt,min),\n   $(LOCALMREF _FixedInt,this),\n   $(LOCALMREF _FixedInt,to),\n   $(LOCALMREF _FixedInt,toArray),\n   $(LOCALMREF _FixedInt,toChars),\n   $(LOCALMREF _FixedInt,toHash),\n   $(LOCALMREF _FixedInt,toRange),\n   $(LOCALMREF _FixedInt,toString)\n Initialization:\n   from $(LOCALMREF2 _FixedInt,this,integral, character or boolean),\n        $(LOCALMREF2 _FixedInt,this.2,_FixedInt),\n        $(LOCALMREF2 _FixedInt,this.4,floating point),\n        $(LOCALMREF2 _FixedInt,this.3,string or character range),\n        $(LOCALMREF2 _FixedInt,this.5,array or data range )\n Functions:\n   $(LOCALREF digits2),\n   $(LOCALREF digits10),\n   $(LOCALREF isPowerOf2),\n   $(LOCALREF isPowerOf10),\n   $(LOCALREF nextPow2),\n   $(LOCALREF nextPow10),\n   $(LOCALREF truncPow2),\n   $(LOCALREF truncPow10)\n Traits:\n   $(LOCALREF isFixedInt),\n   $(LOCALREF isSignedFixedInt),\n   $(LOCALREF isUnsignedFixedInt),\n   $(LOCALREF SignedFixedInt),\n   $(LOCALREF UnsignedFixedInt),\n\n Operators:\n\n   $(TABLE\n       $(TR $(TH Operation) $(TH Expression) $(TH Left (A a)) $(TH Right (B b)) $(TH Result))\n       $(TR $(TD Assignment)\n            $(TD a = b) $(TD FixedInt)\n            $(TD integrals, chars, bool, FixedInt)\n            $(TD FixedInt))\n       $(TR $(TD Positive)\n            $(TD +a) $(TD FixedInt) $(TD -)\n            $(TD FixedInt))\n       $(TR $(TD Negation (2-complement))\n            $(TD -a) $(TD FixedInt) $(TD -)\n            $(TD FixedInt))\n       $(TR $(TD Negation (logical))\n            $(TD ~a) $(TD FixedInt) $(TD -)\n            $(TD FixedInt))\n       $(TR $(TD Increment)\n            $(TD ++a) $(TD FixedInt) $(TD -)\n            $(TD FixedInt))\n       $(TR $(TD Decrement)\n            $(TD --a) $(TD FixedInt) $(TD -)\n            $(TD FixedInt))\n       $(TR $(TD Equality)\n            $(TD a == b) $(TD FixedInt)\n            $(TD integrals, floats, chars, bool, FixedInt)\n            $(TD bool))\n       $(TR $(TD Order)\n            $(TD a <> b) $(TD FixedInt)\n            $(TD integrals, floats, chars, bool, FixedInt)\n            $(TD bool))\n       $(TR $(TD Casting)\n            $(TD cast(B)a)\n            $(TD FixedInt)\n            $(TD integrals, floats, chars, bool, FixedInt)\n            $(TD B))\n       $(TR $(TD Logical and)\n            $(TD a & b) $(TD FixedInt)\n            $(TD integrals, chars, bool, FixedInt)\n            $(TD FixedInt))\n       $(TR $(TD Logical or)\n            $(TD a | b) $(TD FixedInt)\n            $(TD integrals, chars, bool, FixedInt)\n            $(TD FixedInt))\n       $(TR $(TD Logical xor)\n            $(TD a ^ b) $(TD FixedInt)\n            $(TD integrals, chars, bool, FixedInt)\n            $(TD FixedInt))\n       $(TR $(TD Addition)\n            $(TD a + b) $(TD FixedInt)\n            $(TD integrals, chars, bool, FixedInt)\n            $(TD FixedInt))\n       $(TR $(TD Substraction)\n            $(TD a - b) $(TD FixedInt)\n            $(TD integrals, chars, bool, FixedInt)\n            $(TD FixedInt))\n       $(TR $(TD Multiplication)\n            $(TD a * b) $(TD FixedInt)\n            $(TD integrals, chars, bool, FixedInt)\n            $(TD FixedInt))\n       $(TR $(TD Division)\n            $(TD a / b) $(TD FixedInt)\n            $(TD integrals, chars, bool, FixedInt)\n            $(TD FixedInt))\n       $(TR $(TD Modulo)\n            $(TD a % b) $(TD FixedInt)\n            $(TD integrals, chars, bool, FixedInt)\n            $(TD FixedInt))\n       $(TR $(TD Shift left)\n            $(TD a << b) $(TD FixedInt)\n            $(TD integrals, chars, bool)\n            $(TD FixedInt))\n       $(TR $(TD Shift right)\n            $(TD a >>> b) $(TD FixedInt)\n            $(TD integrals, chars, bool)\n            $(TD FixedInt))\n       $(TR $(TD Arithmetic shift right)\n            $(TD a >> b) $(TD FixedInt)\n            $(TD integrals, chars, bool)\n            $(TD FixedInt))\n       $(TR $(TD Shift left)\n            $(TD a << b) $(TD integrals, chars, bool) $(TD FixedInt)\n            $(TD A))\n       $(TR $(TD Shift right)\n            $(TD a >>> b) $(TD integrals, chars, bool) $(TD FixedInt)\n            $(TD A))\n       $(TR $(TD Arithmetic shift right)\n            $(TD a >> b) $(TD integrals, chars, bool) $(TD FixedInt)\n            $(TD A))\n       $(TR $(TD Power)\n            $(TD a ^^ b) $(TD FixedInt)\n            $(TD integrals, chars, bool)\n            $(TD FixedInt))\n       $(TR $(TD Power)\n            $(TD a ^^ b) $(TD integrals, chars, bool) $(TD FixedInt)\n            $(TD A))\n   )\n\n Notes:\n   All operators are $(D_KEYWORD @safe pure nothrow @nogc);<br/>\n   D standard integer promotion rules are implemented;<br/>\n   Comparison and equality operators take into account the sign, therefore uint96.max will not be equal to -1 and comparing signed and unsigned operands is defined behaviour.<br/>\n",
    "line" : 228,
    "char" : 1,
    "name" : "FixedInt",
    "parameters" : [
     {
      "name" : "bits",
      "kind" : "value",
      "deco" : "k"
     },
     {
      "name" : "signed",
      "kind" : "value",
      "deco" : "b",
      "defaultValue" : "true"
     }
    ],
    "constraint" : "bits >= 96 && bits % 32 == 0",
    "members" : [
     {
      "name" : "FixedInt",
      "kind" : "struct",
      "line" : 228,
      "char" : 1,
      "members" : [
       {
        "name" : "data",
        "kind" : "variable",
        "line" : 232,
        "char" : 21,
        "type" : "uint[bits / 32]"
       },
       {
        "name" : "ZERO_BITS",
        "kind" : "variable",
        "line" : 234,
        "char" : 10,
        "storageClass" : [
         "enum"
        ],
        "init" : "0u"
       },
       {
        "name" : "ONE_BITS",
        "kind" : "variable",
        "line" : 235,
        "char" : 10,
        "storageClass" : [
         "enum"
        ],
        "init" : "4294967295u"
       },
       {
        "name" : "SIGN_BITS",
        "kind" : "variable",
        "line" : 236,
        "char" : 10,
        "storageClass" : [
         "enum"
        ],
        "init" : "2147483648u"
       },
       {
        "name" : "_bits",
        "kind" : "variable",
        "line" : 238,
        "char" : 10,
        "storageClass" : [
         "enum"
        ],
        "init" : "bits"
       },
       {
        "name" : "_signed",
        "kind" : "variable",
        "line" : 239,
        "char" : 10,
        "storageClass" : [
         "enum"
        ],
        "init" : "signed"
       },
       {
        "name" : "getMin",
        "kind" : "function",
        "line" : 242,
        "char" : 17,
        "storageClass" : [
         "auto",
         "static"
        ],
        "type" : "pure nothrow @nogc @safe ()",
        "endline" : 253,
        "endchar" : 5
       },
       {
        "name" : "getMax",
        "kind" : "function",
        "line" : 256,
        "char" : 17,
        "storageClass" : [
         "auto",
         "static"
        ],
        "type" : "pure nothrow @nogc @safe ()",
        "endline" : 267,
        "endchar" : 5
       },
       {
        "kind" : "template",
        "line" : 272,
        "char" : 12,
        "name" : "toBuffer",
        "parameters" : [
         {
          "name" : "C",
          "kind" : "type"
         }
        ],
        "constraint" : "isSomeChar!C",
        "members" : [
         {
          "name" : "toBuffer",
          "kind" : "function",
          "line" : 272,
          "char" : 12,
          "type" : "const pure nothrow @nogc @safe size_t(C[] buffer, const uint radix, const bool uppercase = true)",
          "parameters" : [
           {
            "name" : "buffer",
            "type" : "C[]"
           },
           {
            "name" : "radix",
            "deco" : "k",
            "storageClass" : [
             "const"
            ]
           },
           {
            "name" : "uppercase",
            "deco" : "b",
            "storageClass" : [
             "const"
            ],
            "default" : "true"
           }
          ],
          "endline" : 310,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 313,
        "char" : 12,
        "name" : "toBuffer16",
        "parameters" : [
         {
          "name" : "C",
          "kind" : "type"
         }
        ],
        "constraint" : "isSomeChar!C",
        "members" : [
         {
          "name" : "toBuffer16",
          "kind" : "function",
          "line" : 313,
          "char" : 12,
          "type" : "const pure nothrow @nogc @safe size_t(C[] buffer, const bool uppercase = true)",
          "parameters" : [
           {
            "name" : "buffer",
            "type" : "C[]"
           },
           {
            "name" : "uppercase",
            "deco" : "b",
            "storageClass" : [
             "const"
            ],
            "default" : "true"
           }
          ],
          "endline" : 347,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 350,
        "char" : 12,
        "name" : "toBuffer10",
        "parameters" : [
         {
          "name" : "C",
          "kind" : "type"
         }
        ],
        "constraint" : "isSomeChar!C",
        "members" : [
         {
          "name" : "toBuffer10",
          "kind" : "function",
          "line" : 350,
          "char" : 12,
          "type" : "const pure nothrow @nogc @safe size_t(C[] buffer)",
          "parameters" : [
           {
            "name" : "buffer",
            "type" : "C[]"
           }
          ],
          "endline" : 389,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 392,
        "char" : 10,
        "name" : "fromString",
        "parameters" : [
         {
          "name" : "S",
          "kind" : "type"
         }
        ],
        "constraint" : "isSomeString!S",
        "members" : [
         {
          "name" : "fromString",
          "kind" : "function",
          "line" : 392,
          "char" : 10,
          "type" : "pure nothrow @nogc @safe bool(auto ref const S buffer, const uint radix, out bool overflow)",
          "parameters" : [
           {
            "name" : "buffer",
            "type" : "S",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           },
           {
            "name" : "radix",
            "deco" : "k",
            "storageClass" : [
             "const"
            ]
           },
           {
            "name" : "overflow",
            "deco" : "b",
            "storageClass" : [
             "out"
            ]
           }
          ],
          "endline" : 452,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 455,
        "char" : 10,
        "name" : "fromString10",
        "parameters" : [
         {
          "name" : "S",
          "kind" : "type"
         }
        ],
        "constraint" : "isSomeString!S",
        "members" : [
         {
          "name" : "fromString10",
          "kind" : "function",
          "line" : 455,
          "char" : 10,
          "type" : "pure nothrow @nogc @safe bool(auto ref const S buffer, out bool overflow)",
          "parameters" : [
           {
            "name" : "buffer",
            "type" : "S",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           },
           {
            "name" : "overflow",
            "deco" : "b",
            "storageClass" : [
             "out"
            ]
           }
          ],
          "endline" : 523,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 526,
        "char" : 10,
        "name" : "fromString16",
        "parameters" : [
         {
          "name" : "S",
          "kind" : "type"
         }
        ],
        "constraint" : "isSomeString!S",
        "members" : [
         {
          "name" : "fromString16",
          "kind" : "function",
          "line" : 526,
          "char" : 10,
          "type" : "pure nothrow @nogc @safe bool(auto ref const S buffer, out bool overflow)",
          "parameters" : [
           {
            "name" : "buffer",
            "type" : "S",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           },
           {
            "name" : "overflow",
            "deco" : "b",
            "storageClass" : [
             "out"
            ]
           }
          ],
          "endline" : 570,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 572,
        "char" : 7,
        "name" : "fromIterable",
        "parameters" : [
         {
          "name" : "I",
          "kind" : "type"
         }
        ],
        "constraint" : "isIterable!I && isSomeChar!(ForeachType!I)",
        "members" : [
         {
          "name" : "fromIterable",
          "kind" : "function",
          "line" : 572,
          "char" : 7,
          "type" : "bool(I iterable, const uint radix, out bool overflow)",
          "parameters" : [
           {
            "name" : "iterable",
            "type" : "I"
           },
           {
            "name" : "radix",
            "deco" : "k",
            "storageClass" : [
             "const"
            ]
           },
           {
            "name" : "overflow",
            "deco" : "b",
            "storageClass" : [
             "out"
            ]
           }
          ],
          "endline" : 625,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 627,
        "char" : 7,
        "name" : "fromIterableWithHeader",
        "parameters" : [
         {
          "name" : "I",
          "kind" : "type"
         }
        ],
        "constraint" : "isIterable!I && isSomeChar!(ForeachType!I)",
        "members" : [
         {
          "name" : "fromIterableWithHeader",
          "kind" : "function",
          "line" : 627,
          "char" : 7,
          "type" : "bool(I iterable, out bool overflow, out bool negative, out uint radix)",
          "parameters" : [
           {
            "name" : "iterable",
            "type" : "I"
           },
           {
            "name" : "overflow",
            "deco" : "b",
            "storageClass" : [
             "out"
            ]
           },
           {
            "name" : "negative",
            "deco" : "b",
            "storageClass" : [
             "out"
            ]
           },
           {
            "name" : "radix",
            "deco" : "k",
            "storageClass" : [
             "out"
            ]
           }
          ],
          "endline" : 725,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 728,
        "char" : 7,
        "name" : "toFloat",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isFloatingPoint!T",
        "members" : [
         {
          "name" : "toFloat",
          "kind" : "function",
          "line" : 728,
          "char" : 7,
          "type" : "const pure nothrow @nogc @safe T()",
          "endline" : 781,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 784,
        "char" : 10,
        "name" : "fromFloat",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isFloatingPoint!T",
        "members" : [
         {
          "name" : "fromFloat",
          "kind" : "function",
          "line" : 784,
          "char" : 10,
          "type" : "pure @safe bool(T x, out bool underflow, out bool overflow, out bool inexact)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T"
           },
           {
            "name" : "underflow",
            "deco" : "b",
            "storageClass" : [
             "out"
            ]
           },
           {
            "name" : "overflow",
            "deco" : "b",
            "storageClass" : [
             "out"
            ]
           },
           {
            "name" : "inexact",
            "deco" : "b",
            "storageClass" : [
             "out"
            ]
           }
          ],
          "endline" : 927,
          "endchar" : 5
         }
        ]
       },
       {
        "name" : "round",
        "kind" : "function",
        "line" : 929,
        "char" : 29,
        "type" : "const FixedInt!(bits, signed)(const uint d)",
        "parameters" : [
         {
          "name" : "d",
          "deco" : "k",
          "storageClass" : [
           "const"
          ]
         }
        ],
        "endline" : 953,
        "endchar" : 5
       },
       {
        "name" : "min",
        "kind" : "variable",
        "comment" : "minimum and maximum representable values\n",
        "line" : 958,
        "char" : 10,
        "storageClass" : [
         "enum"
        ],
        "init" : "getMin()"
       },
       {
        "name" : "max",
        "kind" : "variable",
        "comment" : "ditto\n",
        "line" : 960,
        "char" : 10,
        "storageClass" : [
         "enum"
        ],
        "init" : "getMax()"
       },
       {
        "kind" : "template",
        "comment" : " Constructs a fixed size integer from a built in integral, character or\n boolean type.\n Params:\n  x = any integral, character, or boolean value.\n Examples:\n\t---\n\tassert(uint96(42) == 42);\n\tassert(int96(-10) == -10);\n\tassert(uint128('A') == 65);\n\tassert(int160(true) == 1);\n\t---\n",
        "line" : 976,
        "char" : 5,
        "name" : "this",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isIntegral!T || isSomeChar!T || is(Unqual!T == bool)",
        "members" : [
         {
          "name" : "this",
          "kind" : "constructor",
          "line" : 976,
          "char" : 5,
          "type" : "pure nothrow @nogc @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 991,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : " Constructs a fixed size integer from another one.\n Params:\n  x = any fixed size integer\n Throws:\n  $(PHOBOSREF conv,ConvOverflowException) if the specified value does not\n  fit in the current one.\n Examples:\n\t---\n\tassert(uint128(uint96(42)) == 42);\n\tassert(int256(int1024(4242)) == 4242);\n\tassert(int96(int128(-42)) == -42);\n\tassert(int160(int96(-4242)) == -4242);\n\t---\n",
        "line" : 1011,
        "char" : 5,
        "name" : "this",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isFixedInt!T && T.sizeof <= this.sizeof",
        "members" : [
         {
          "name" : "this",
          "kind" : "constructor",
          "line" : 1011,
          "char" : 5,
          "type" : "pure nothrow @nogc @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1020,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 1023,
        "char" : 5,
        "name" : "this",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isFixedInt!T && T.sizeof > this.sizeof",
        "members" : [
         {
          "name" : "this",
          "kind" : "constructor",
          "line" : 1023,
          "char" : 5,
          "type" : "(auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1034,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "\n Constructs a fixed size integer from a string value or a range of input\n characters\n Params:\n  s = a string that contains decimal, hexadecimal, octal or binary digits\n      or any other digit if a radix is provided;\n  range = a character input range that contains decimal, hexadecimal, octal\n      or binary digits or any other digit if a radix is provided;\n  radix = a value between 2 and 36 representing the number base.\n Throws:\n  $(PHOBOSREF conv,ConvOverflowException) if the _value does not fit in\n  the current FixedInt type;<br/>\n  $(PHOBOSREF conv,ConvOverflowException) if the _value is negative and the\n  current type is unsigned;<br/>\n  $(PHOBOSREF conv, ConvException) if the specified string is empty or\n  contains invalid characters;<br/>\n  $(PHOBOSREF conv, ConvException) if the specified radix is outside the\n  interval [2; 36].\n Notes:\n   Strings starting with $(B 0x) or $(B 0X) will be interpreted as\n   hexadecimal;<br/>\n   Strings starting with $(B 0b) or $(B 0B) will be interpreted as\n   binary;<br/>\n   Strings starting with $(B 0o) or $(B 0O) will be interpreted as\n   octal;<br/>\n   String prefixes are accepted only if a radix is not provided;<br/>\n   Strings without any prefix will be interpreted as decimal if a radix\n   is not provided;<br/>\n   $(B +/-) sign is accepted only for decimal input strings and if a\n   radix is not provided;<br/>\n   Underscore characters are ignored.\n Examples:\n\t---\n\tassert(uint128(\"123\") == 123);\n\tassert(uint128(\"0xFFFFFFFF\") == 0xFFFFFFFF);\n\tassert(uint128(\"0b10101010\") == 0b10101010);\n\tassert(uint128(\"0o666\") == 0x1b6);\n\tassert(int128(\"-42\") == -42);\n\tassert(int128(\"+42\") == 42);\n\n\tassert(uint128(\"9999\", 10) == 9999);\n\tassert(uint128(\"AAAA\", 16) == 0xAAAA);\n\tassert(uint128(\"1111\", 2) == 0b1111);\n\n\tassert(uint96(\"123_456_789\") == 123456789);\n\tassert(int96(\"0xABCD_EF00\") == 0xABCDEF00);\n\t---\n",
        "line" : 1086,
        "char" : 5,
        "name" : "this",
        "parameters" : [
         {
          "name" : "S",
          "kind" : "type"
         }
        ],
        "constraint" : "isSomeString!S",
        "members" : [
         {
          "name" : "this",
          "kind" : "constructor",
          "line" : 1086,
          "char" : 5,
          "type" : "@safe (auto ref const S s)",
          "parameters" : [
           {
            "name" : "s",
            "type" : "S",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1172,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 1176,
        "char" : 5,
        "name" : "this",
        "parameters" : [
         {
          "name" : "S",
          "kind" : "type"
         }
        ],
        "constraint" : "isSomeString!S",
        "members" : [
         {
          "name" : "this",
          "kind" : "constructor",
          "line" : 1176,
          "char" : 5,
          "type" : "@safe (auto ref const S s, const uint radix)",
          "parameters" : [
           {
            "name" : "s",
            "type" : "S",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           },
           {
            "name" : "radix",
            "deco" : "k",
            "storageClass" : [
             "const"
            ]
           }
          ],
          "endline" : 1209,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 1212,
        "char" : 5,
        "name" : "this",
        "parameters" : [
         {
          "name" : "R",
          "kind" : "type"
         }
        ],
        "constraint" : "isIterable!R && isSomeChar!(ForeachType!R) && !isSomeString!R",
        "members" : [
         {
          "name" : "this",
          "kind" : "constructor",
          "line" : 1212,
          "char" : 5,
          "type" : "(R range)",
          "parameters" : [
           {
            "name" : "range",
            "type" : "R"
           }
          ],
          "endline" : 1255,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 1258,
        "char" : 5,
        "name" : "this",
        "parameters" : [
         {
          "name" : "R",
          "kind" : "type"
         }
        ],
        "constraint" : "isIterable!R && isSomeChar!(ForeachType!R) && !isSomeString!R",
        "members" : [
         {
          "name" : "this",
          "kind" : "constructor",
          "line" : 1258,
          "char" : 5,
          "type" : "(R range, const uint radix)",
          "parameters" : [
           {
            "name" : "range",
            "type" : "R"
           },
           {
            "name" : "radix",
            "deco" : "k",
            "storageClass" : [
             "const"
            ]
           }
          ],
          "endline" : 1278,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : " Constructs a fixed size integer from a floating point value\n Params:\n  x = any floating point value.\n Throws:\n  $(PHOBOSREF conv,ConvException) if the floating point value is NaN or\n  cannot be represented exactly as a FixedInt ;<br/>\n  $(PHOBOSREF conv,ConvOverflowException) if the floating point value is\n  not finite, it does not fit in the current fixed size integer,\n  or is underflowing towards 0.\n Notes:\n  Only 80-bit $(D_KEYWORD real) type is supported. Other real types are\n  converted to $(D_KEYWORD double) before the construction;<br/>\n Examples:\n\t---\n\tassert(uint128(0.0) == 0);\n\tassert(uint128(129.0) == 129);\n\tassert(uint128(1.23E+3) == 1230);\n\t---\n",
        "line" : 1302,
        "char" : 5,
        "name" : "this",
        "parameters" : [
         {
          "name" : "F",
          "kind" : "type"
         }
        ],
        "constraint" : "isFloatingPoint!F",
        "members" : [
         {
          "name" : "this",
          "kind" : "constructor",
          "line" : 1302,
          "char" : 5,
          "type" : "@safe (auto ref const F x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "F",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1318,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : " Constructs a fixed size integer using an _array or _range of any type\n Params:\n  array = an _array of data\n  range = a data _range\n Throws:\n  $(PHOBOSREF conv,ConvOverflowException) if the specified _array or _range\n  does not fit in the current fixed size integer\n Notes:\n  The most significant bit of the _array or _range data will set the sign.<br/>\n  Character ranges or strings are interpreted as decimal numbers, not as raw data.\n  Using a character _range or string will call one of the $(LOCALMREF2 _FixedInt,this.3,string constructors)<br/>\n Examples:\n\t---\n\tassert(uint128([12]) == 12);\n\tassert(uint96([0xAA, 0xBB]) == 0xBB000000AA);\n\t---\n",
        "line" : 1340,
        "char" : 2,
        "name" : "this",
        "parameters" : [
         {
          "name" : "A",
          "kind" : "type"
         }
        ],
        "constraint" : "isArray!A && !isSomeString!A && (__traits(isPOD, typeof(A.init)) || isScalarType!(typeof(A.init)))",
        "members" : [
         {
          "name" : "this",
          "kind" : "constructor",
          "line" : 1340,
          "char" : 2,
          "type" : "pure @trusted (auto ref const A array)",
          "parameters" : [
           {
            "name" : "array",
            "type" : "A",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1350,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 1354,
        "char" : 5,
        "name" : "this",
        "parameters" : [
         {
          "name" : "R",
          "kind" : "type"
         }
        ],
        "constraint" : "isIterable!R && !isArray!R && !isSomeChar!(ForeachType!R) && (__traits(isPOD, ForeachType!R) || isScalarType!(ForeachType!R))",
        "members" : [
         {
          "name" : "this",
          "kind" : "constructor",
          "line" : 1354,
          "char" : 5,
          "type" : "pure @trusted (R range)",
          "parameters" : [
           {
            "name" : "range",
            "type" : "R"
           }
          ],
          "endline" : 1376,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1380,
        "char" : 14,
        "name" : "opAssign",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isIntegral!T || isSomeChar!T || is(Unqual!T == bool)",
        "members" : [
         {
          "name" : "opAssign",
          "kind" : "function",
          "line" : 1380,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1387,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1390,
        "char" : 14,
        "name" : "opAssign",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isFixedInt!T && T.sizeof <= this.sizeof",
        "members" : [
         {
          "name" : "opAssign",
          "kind" : "function",
          "line" : 1390,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1397,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1400,
        "char" : 10,
        "name" : "opEquals",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isIntegral!T || isSomeChar!T || is(Unqual!T == bool)",
        "members" : [
         {
          "name" : "opEquals",
          "kind" : "function",
          "line" : 1400,
          "char" : 10,
          "type" : "const pure nothrow @nogc @safe bool(auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1416,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1419,
        "char" : 10,
        "name" : "opEquals",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isFixedInt!T",
        "members" : [
         {
          "name" : "opEquals",
          "kind" : "function",
          "line" : 1419,
          "char" : 10,
          "type" : "const pure nothrow @nogc @safe bool(auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1435,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1438,
        "char" : 10,
        "name" : "opEquals",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isFloatingPoint!T",
        "members" : [
         {
          "name" : "opEquals",
          "kind" : "function",
          "line" : 1438,
          "char" : 10,
          "type" : "const pure nothrow @nogc @safe bool(auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1441,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1444,
        "char" : 9,
        "name" : "opCmp",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isIntegral!T || isSomeChar!T || is(Unqual!T == bool)",
        "members" : [
         {
          "name" : "opCmp",
          "kind" : "function",
          "line" : 1444,
          "char" : 9,
          "type" : "const pure nothrow @nogc @safe int(auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1460,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1463,
        "char" : 9,
        "name" : "opCmp",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isFixedInt!T",
        "members" : [
         {
          "name" : "opCmp",
          "kind" : "function",
          "line" : 1463,
          "char" : 9,
          "type" : "const pure nothrow @nogc @safe int(auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1479,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1482,
        "char" : 9,
        "name" : "opCmp",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isFloatingPoint!T",
        "members" : [
         {
          "name" : "opCmp",
          "kind" : "function",
          "line" : 1482,
          "char" : 9,
          "type" : "const pure nothrow @nogc @safe int(auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1490,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1493,
        "char" : 7,
        "name" : "opCast",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isIntegral!T || isSomeChar!T || is(Unqual!T == bool)",
        "members" : [
         {
          "name" : "opCast",
          "kind" : "function",
          "line" : 1493,
          "char" : 7,
          "type" : "const pure nothrow @nogc @safe T()",
          "endline" : 1501,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1504,
        "char" : 7,
        "name" : "opCast",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isFixedInt!T",
        "members" : [
         {
          "name" : "opCast",
          "kind" : "function",
          "line" : 1504,
          "char" : 7,
          "type" : "const pure nothrow @nogc @safe T()",
          "endline" : 1516,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1519,
        "char" : 7,
        "name" : "opCast",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isFloatingPoint!T",
        "members" : [
         {
          "name" : "opCast",
          "kind" : "function",
          "line" : 1519,
          "char" : 7,
          "type" : "const pure nothrow @nogc @safe T()",
          "endline" : 1522,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1525,
        "char" : 10,
        "name" : "opUnary",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"+\""
         }
        ],
        "members" : [
         {
          "name" : "opUnary",
          "kind" : "function",
          "line" : 1525,
          "char" : 10,
          "storageClass" : [
           "auto"
          ],
          "type" : "const pure nothrow @nogc @safe ()",
          "endline" : 1528,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1531,
        "char" : 10,
        "name" : "opUnary",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"-\""
         }
        ],
        "members" : [
         {
          "name" : "opUnary",
          "kind" : "function",
          "line" : 1531,
          "char" : 10,
          "storageClass" : [
           "auto"
          ],
          "type" : "const pure nothrow @nogc @safe ()",
          "endline" : 1536,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1539,
        "char" : 10,
        "name" : "opUnary",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"~\""
         }
        ],
        "members" : [
         {
          "name" : "opUnary",
          "kind" : "function",
          "line" : 1539,
          "char" : 10,
          "storageClass" : [
           "auto"
          ],
          "type" : "const pure nothrow @nogc @safe ()",
          "endline" : 1544,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1547,
        "char" : 14,
        "name" : "opUnary",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"++\""
         }
        ],
        "members" : [
         {
          "name" : "opUnary",
          "kind" : "function",
          "line" : 1547,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe ()",
          "endline" : 1551,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1554,
        "char" : 14,
        "name" : "opUnary",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"--\""
         }
        ],
        "members" : [
         {
          "name" : "opUnary",
          "kind" : "function",
          "line" : 1554,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe ()",
          "endline" : 1558,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1561,
        "char" : 14,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"|\""
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isIntegral!T || isSomeChar!T || is(Unqual!T == bool)",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1561,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1568,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1571,
        "char" : 14,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"&\""
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isIntegral!T || isSomeChar!T || is(Unqual!T == bool)",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1571,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1578,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1581,
        "char" : 14,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"^\""
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isIntegral!T || isSomeChar!T || is(Unqual!T == bool)",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1581,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1588,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1591,
        "char" : 14,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"|\""
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isFixedInt!T && T.sizeof <= this.sizeof",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1591,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1598,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1601,
        "char" : 14,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"&\""
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isFixedInt!T && T.sizeof <= this.sizeof",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1601,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1608,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1611,
        "char" : 14,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"^\""
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isFixedInt!T && T.sizeof <= this.sizeof",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1611,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1618,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1621,
        "char" : 14,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"<<\""
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isIntegral!T || isSomeChar!T || is(Unqual!T == bool)",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1621,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1627,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1630,
        "char" : 14,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\">>>\""
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isIntegral!T || isSomeChar!T || is(Unqual!T == bool)",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1630,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1636,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1639,
        "char" : 14,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\">>\""
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isIntegral!T || isSomeChar!T || is(Unqual!T == bool)",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1639,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1650,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1653,
        "char" : 14,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"+\""
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isIntegral!T || isSomeChar!T || is(Unqual!T == bool)",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1653,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1668,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1671,
        "char" : 14,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"+\""
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isFixedInt!T && T.sizeof <= this.sizeof",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1671,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1687,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1690,
        "char" : 14,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"-\""
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isIntegral!T || isSomeChar!T || is(Unqual!T == bool)",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1690,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1705,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1708,
        "char" : 14,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"-\""
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isFixedInt!T && T.sizeof <= this.sizeof",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1708,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1724,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1727,
        "char" : 14,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"*\""
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isIntegral!T || isSomeChar!T || is(Unqual!T == bool)",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1727,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1751,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1754,
        "char" : 14,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"*\""
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isFixedInt!T && T.sizeof <= this.sizeof",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1754,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1773,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1776,
        "char" : 14,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"/\""
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isIntegral!T || isSomeChar!T || is(Unqual!T == bool)",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1776,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1800,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1803,
        "char" : 14,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"/\""
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isFixedInt!T && T.sizeof <= this.sizeof",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1803,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1821,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1824,
        "char" : 14,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"%\""
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isIntegral!T || isSomeChar!T || is(Unqual!T == bool)",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1824,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1848,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1851,
        "char" : 14,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"%\""
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isFixedInt!T && T.sizeof <= this.sizeof",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1851,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1869,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1872,
        "char" : 14,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"^^\""
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isIntegral!T || isSomeChar!T || is(Unqual!T == bool)",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1872,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1907,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1910,
        "char" : 14,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"^^\""
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isFixedInt!T",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1910,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1945,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1948,
        "char" : 14,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string"
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isFixedInt!T && (op == \">>\" || op == \">>>\" || op == \"<<\")",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1948,
          "char" : 14,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc ref @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1951,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1954,
        "char" : 10,
        "name" : "opBinary",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string"
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "(isIntegral!T || isSomeChar!T || is(Unqual!T == bool)) && (op == \"|\" || op == \"&\" || op == \"^\" || op == \"+\" || op == \"-\" || op == \"*\" || op == \"/\" || op == \"%\" || op == \"^^\")",
        "members" : [
         {
          "name" : "opBinary",
          "kind" : "function",
          "line" : 1954,
          "char" : 10,
          "storageClass" : [
           "auto"
          ],
          "type" : "const pure nothrow @nogc @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1964,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1967,
        "char" : 10,
        "name" : "opBinaryRight",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string"
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "(isIntegral!T || isSomeChar!T || is(Unqual!T == bool)) && (op == \"|\" || op == \"&\" || op == \"^\" || op == \"+\" || op == \"*\" || op == \"-\" || op == \"/\" || op == \"%\")",
        "members" : [
         {
          "name" : "opBinaryRight",
          "kind" : "function",
          "line" : 1967,
          "char" : 10,
          "storageClass" : [
           "auto"
          ],
          "type" : "const pure nothrow @nogc @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1977,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1980,
        "char" : 10,
        "name" : "opBinary",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string"
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isFixedInt!T && (op == \"|\" || op == \"&\" || op == \"^\" || op == \"+\" || op == \"-\" || op == \"*\" || op == \"/\" || op == \"%\")",
        "members" : [
         {
          "name" : "opBinary",
          "kind" : "function",
          "line" : 1980,
          "char" : 10,
          "storageClass" : [
           "auto"
          ],
          "type" : "const pure nothrow @nogc @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 1997,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 2000,
        "char" : 10,
        "name" : "opBinary",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string"
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "(isIntegral!T || isSomeChar!T || is(Unqual!T == bool) || isFixedInt!T) && (op == \">>\" || op == \">>>\" || op == \"<<\")",
        "members" : [
         {
          "name" : "opBinary",
          "kind" : "function",
          "line" : 2000,
          "char" : 10,
          "storageClass" : [
           "auto"
          ],
          "type" : "const pure nothrow @nogc @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 2007,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 2010,
        "char" : 10,
        "name" : "opBinaryRight",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string"
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "(isIntegral!T || isSomeChar!T || is(Unqual!T == bool)) && (op == \">>\" || op == \">>>\" || op == \"<<\")",
        "members" : [
         {
          "name" : "opBinaryRight",
          "kind" : "function",
          "line" : 2010,
          "char" : 10,
          "storageClass" : [
           "auto"
          ],
          "type" : "const pure nothrow @nogc @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 2017,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 2020,
        "char" : 10,
        "name" : "opBinaryRight",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string",
          "specValue" : "\"^^\""
         },
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "isIntegral!T || isSomeChar!T || is(Unqual!T == bool)",
        "members" : [
         {
          "name" : "opBinaryRight",
          "kind" : "function",
          "line" : 2020,
          "char" : 10,
          "storageClass" : [
           "auto"
          ],
          "type" : "const pure nothrow @nogc @safe (auto ref const T x)",
          "parameters" : [
           {
            "name" : "x",
            "type" : "T",
            "storageClass" : [
             "auto",
             "const",
             "ref"
            ]
           }
          ],
          "endline" : 2055,
          "endchar" : 5
         }
        ]
       },
       {
        "name" : "toHash",
        "kind" : "function",
        "comment" : " Calculates a hash key for the current FixedInt value\n Returns: a unique hash value\n Notes:\n   This function is not intended to be used directly, but it's\n   used internally by associative arrays.\n Examples:\n\t---\n\tstring[int96] dictionary;\n\tdictionary[int96(0)] = \"zero\";\n\tdictionary[int96(10)] = \"ten\";\n\n\tassert(dictionary[int96(0)] == \"zero\");\n\tassert(dictionary[int96(10)] == \"ten\");\n\t---\n",
        "line" : 2074,
        "char" : 12,
        "type" : "const pure nothrow @nogc @safe size_t()",
        "endline" : 2081,
        "endchar" : 5
       },
       {
        "name" : "toString",
        "kind" : "function",
        "comment" : " Converts the current FixedInt value to its default decimal\n string representation\n Returns:\n   A base-10 representation of the current FixedInt value\n Examples:\n\t---\n\tassert(uint96(123).toString() == \"123\");\n\tassert(int128(-25).toString() == \"-25\");\n\t---\n",
        "line" : 2096,
        "char" : 12,
        "type" : "const pure nothrow @safe string()",
        "endline" : 2114,
        "endchar" : 5
       },
       {
        "kind" : "template",
        "comment" : " Converts the current FixedInt value to its a string\n representation using the specified format\n Params:\n   sink = a delegate for accepting custom segments of the\n   formatted string.\n   f = a format string specifying the output format.\n Throws:\n   $(PHOBOSREF format,FormatException) if the format specifier\n   is not supported.\n Notes:\n   This function is not supposed to be used directly, but it's used\n   internally by the standard library $(PHOBOSREF format,format) or\n   $(PHOBOSREF stdio,writef). <br/>\n   Supported format specifiers:<ul>\n   <li>$(B %d) - signed decimal</li>\n   <li>$(B %i) - signed decimal</li>\n   <li>$(B %u) - unsigned decimal</li>\n   <li>$(B %x) - unsigned hexadecimal (lowercase)</li>\n   <li>$(B %X) - unsigned hexadecimal (uppercase)</li>\n   <li>$(B %o) - unsigned octal</li>\n   <li>$(B %b) - unsigned binary</li>\n   <li>$(B %s) - default string representation</li>\n   </ul>\n Examples:\n\t---\n\timport std.format;\n\tassert(format(\"%d in hex is %x or in octal is %o\",\n\t\tuint96(123), int96(123), uint128(123)) ==\n\t\t\"123 in hex is 7b or in octal is 173\");\n\t---\n",
        "line" : 2148,
        "char" : 10,
        "name" : "toString",
        "parameters" : [
         {
          "name" : "C",
          "kind" : "type"
         }
        ],
        "constraint" : "isSomeChar!C",
        "members" : [
         {
          "name" : "toString",
          "kind" : "function",
          "line" : 2148,
          "char" : 10,
          "type" : "const void(scope void delegate(const(C)[]) sink, ref FormatSpec!char f)",
          "parameters" : [
           {
            "name" : "sink",
            "type" : "void delegate(const(C)[])",
            "storageClass" : [
             "scope"
            ]
           },
           {
            "name" : "f",
            "type" : "FormatSpec!char",
            "storageClass" : [
             "ref"
            ]
           }
          ],
          "endline" : 2214,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : " Converts the current FixedInt value to its custom base representation\n Params:\n   radix = a base used to convert;\n   lettercase = casing used if radix is greater than 10.\n Throws:\n  $(PHOBOSREF conv, ConvException) if the specified radix is outside the\n  interval [2; 36].\n Examples:\n\t---\n\tassert(uint96(123).to!string(10) == \"123\");\n\tassert(uint96(123).to!string(16, LetterCase.lower) == \"7b\");\n\tassert(uint96(123).to!string(16, LetterCase.upper) == \"7B\");\n\tassert(uint96(123).to!string(36) == \"3F\");\n\t---\n",
        "line" : 2234,
        "char" : 7,
        "name" : "to",
        "parameters" : [
         {
          "name" : "S",
          "kind" : "type"
         }
        ],
        "constraint" : "isSomeString!S",
        "members" : [
         {
          "name" : "to",
          "kind" : "function",
          "line" : 2234,
          "char" : 7,
          "type" : "const @safe S(const uint radix = 10, const LetterCase lettercase = LetterCase.upper)",
          "parameters" : [
           {
            "name" : "radix",
            "deco" : "k",
            "storageClass" : [
             "const"
            ],
            "default" : "10"
           },
           {
            "name" : "lettercase",
            "type" : "LetterCase",
            "storageClass" : [
             "const"
            ],
            "default" : "LetterCase.upper"
           }
          ],
          "endline" : 2257,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "\n Converts the current fixed size integer _to its equivalent character range representation\n using the specified radix\n Params:\n   radix = a _radix between 2 and 36 used _to convert the input _value.\n   letterCase = choose between character case for radixes greater than 10.\n Returns:\n   A range of characters representing of the current fixed size integer.\n Notes:\n   Negative values are prefixed with minus sign(-) only if radix is 10.\n",
        "line" : 2272,
        "char" : 10,
        "name" : "toChars",
        "parameters" : [
         {
          "name" : "radix",
          "kind" : "value",
          "deco" : "k",
          "defaultValue" : "10"
         },
         {
          "name" : "C",
          "kind" : "type",
          "defaultDeco" : "a"
         },
         {
          "name" : "letterCase",
          "kind" : "value",
          "type" : "LetterCase",
          "defaultValue" : "LetterCase.upper"
         }
        ],
        "constraint" : "isSomeChar!C",
        "members" : [
         {
          "name" : "toChars",
          "kind" : "function",
          "line" : 2272,
          "char" : 10,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @nogc @safe ()",
          "endline" : 2314,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "\n Converts the current fixed size integer _to an array or range of byte data\n Returns:\n   An array or a range as the internal representation of the\n   current fixed size integer.\n Notes:\n   The internal representation of a fixed size integer is in fact\n   a $(D_KEYWORD uint)[] array with $(D_KEYWORD sizeof) / 4 elements.\n   To avoid the garbage collector, direct pointer access is possible,\n   each fixed size integer containing exactly $(D_KEYWORD sizeof) bytes;\n Examples:\n\t---\n\tassert(uint96(0xAA).toArray!int() == [0xAA, 0, 0]);\n\tassert(uint128(0xAAAABBBBCCCCDDDD).toArray!int() == [0xCCCCDDDD, 0xAAAABBBB, 0, 0]);\n\n\t//usage with direct pointer access\n\tuint96 x = uint96(\"0xAAAA_BBBB_CCCC_DDDD_EEEE_FFFF\");\n\tbyte* bytes = cast(byte*)&x;\n\tassert(*bytes == 0xFF);\n\tassert(*(bytes + x.sizeof - 1) == 0xAA;\n\t---\n",
        "line" : 2340,
        "char" : 9,
        "name" : "toArray",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "__traits(isPOD, T) || isScalarType!T",
        "members" : [
         {
          "name" : "toArray",
          "kind" : "function",
          "line" : 2340,
          "char" : 9,
          "type" : "const pure nothrow @trusted T[]()",
          "endline" : 2348,
          "endchar" : 5
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 2352,
        "char" : 10,
        "name" : "toRange",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "__traits(isPOD, T) || isScalarType!T",
        "members" : [
         {
          "name" : "toRange",
          "kind" : "function",
          "line" : 2352,
          "char" : 10,
          "storageClass" : [
           "auto"
          ],
          "type" : "const pure nothrow @nogc @trusted ()",
          "endline" : 2370,
          "endchar" : 5
         }
        ]
       }
      ]
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : " Counts the number of base-2 digits (bits)\n Params:\n  x = a fixed size integer\n Returns:\n   The number of base-2 digits necessary to represent the specified value or zero if x is 0.\n",
    "line" : 2381,
    "char" : 6,
    "name" : "digits2",
    "parameters" : [
     {
      "name" : "F",
      "kind" : "type"
     }
    ],
    "constraint" : "isFixedInt!F",
    "members" : [
     {
      "name" : "digits2",
      "kind" : "function",
      "line" : 2381,
      "char" : 6,
      "storageClass" : [
       "auto"
      ],
      "type" : "pure nothrow @nogc @safe (auto ref const F x)",
      "parameters" : [
       {
        "name" : "x",
        "type" : "F",
        "storageClass" : [
         "auto",
         "const",
         "ref"
        ]
       }
      ],
      "endline" : 2397,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittestL2400_1",
    "kind" : "function",
    "comment" : "\n",
    "line" : 2400,
    "char" : 1,
    "endline" : 2414,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " Counts the number of base-10 digits (decimal digits)\n Params:\n  x = a fixed size integer\n Returns:\n   The number of base-10 digits necessary to represent the specified value or zero if x is 0.\n",
    "line" : 2415,
    "char" : 6,
    "name" : "digits10",
    "parameters" : [
     {
      "name" : "F",
      "kind" : "type"
     }
    ],
    "constraint" : "isFixedInt!F",
    "members" : [
     {
      "name" : "digits10",
      "kind" : "function",
      "line" : 2415,
      "char" : 6,
      "storageClass" : [
       "auto"
      ],
      "type" : "pure nothrow @nogc @safe (auto ref const F x)",
      "parameters" : [
       {
        "name" : "x",
        "type" : "F",
        "storageClass" : [
         "auto",
         "const",
         "ref"
        ]
       }
      ],
      "endline" : 2432,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittestL2435_2",
    "kind" : "function",
    "comment" : "\n",
    "line" : 2435,
    "char" : 1,
    "endline" : 2449,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " Check whether a number is a power of two.\n Params:\n  x = a fixed size integer\n Returns:\n   true if x is a power of two, otherwise false. Zero or negative values are not considered powers of 2.\n",
    "line" : 2450,
    "char" : 6,
    "name" : "isPowerOf2",
    "parameters" : [
     {
      "name" : "F",
      "kind" : "type"
     }
    ],
    "constraint" : "isFixedInt!F",
    "members" : [
     {
      "name" : "isPowerOf2",
      "kind" : "function",
      "line" : 2450,
      "char" : 6,
      "type" : "pure nothrow @nogc @safe bool(auto ref const F x)",
      "parameters" : [
       {
        "name" : "x",
        "type" : "F",
        "storageClass" : [
         "auto",
         "const",
         "ref"
        ]
       }
      ],
      "endline" : 2458,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittestL2461_3",
    "kind" : "function",
    "comment" : "\n",
    "line" : 2461,
    "char" : 1,
    "endline" : 2476,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " Check whether a number is a power of ten.\n Params:\n  x = a fixed size integer\n Returns:\n   true if x is a power of ten, otherwise false. Zero or negative values are not considered powers of 10.\n",
    "line" : 2477,
    "char" : 6,
    "name" : "isPowerOf10",
    "parameters" : [
     {
      "name" : "F",
      "kind" : "type"
     }
    ],
    "constraint" : "isFixedInt!F",
    "members" : [
     {
      "name" : "isPowerOf10",
      "kind" : "function",
      "line" : 2477,
      "char" : 6,
      "type" : "pure nothrow @nogc @safe bool(auto ref const F x)",
      "parameters" : [
       {
        "name" : "x",
        "type" : "F",
        "storageClass" : [
         "auto",
         "const",
         "ref"
        ]
       }
      ],
      "endline" : 2488,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittestL2491_4",
    "kind" : "function",
    "comment" : "\n",
    "line" : 2491,
    "char" : 1,
    "endline" : 2505,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " Gives the next power of two.\n Params:\n  x = a fixed size integer\n Returns:\n   The next value after x that is a power of two, zero if x is 0 or on overflow.\n",
    "line" : 2506,
    "char" : 6,
    "name" : "nextPow2",
    "parameters" : [
     {
      "name" : "F",
      "kind" : "type"
     }
    ],
    "constraint" : "isFixedInt!F",
    "members" : [
     {
      "name" : "nextPow2",
      "kind" : "function",
      "line" : 2506,
      "char" : 6,
      "storageClass" : [
       "auto"
      ],
      "type" : "pure nothrow @nogc @safe (auto ref const F x)",
      "parameters" : [
       {
        "name" : "x",
        "type" : "F",
        "storageClass" : [
         "auto",
         "const",
         "ref"
        ]
       }
      ],
      "endline" : 2529,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittestL2532_5",
    "kind" : "function",
    "comment" : "\n",
    "line" : 2532,
    "char" : 1,
    "endline" : 2546,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " Gives the next power of ten.\n Params:\n  x = a fixed size integer\n Returns:\n   The next value after x that is a power of ten, zero if x is 0 or on overflow.\n",
    "line" : 2547,
    "char" : 6,
    "name" : "nextPow10",
    "parameters" : [
     {
      "name" : "F",
      "kind" : "type"
     }
    ],
    "constraint" : "isFixedInt!F",
    "members" : [
     {
      "name" : "nextPow10",
      "kind" : "function",
      "line" : 2547,
      "char" : 6,
      "storageClass" : [
       "auto"
      ],
      "type" : "pure nothrow @nogc @safe (auto ref const F x)",
      "parameters" : [
       {
        "name" : "x",
        "type" : "F",
        "storageClass" : [
         "auto",
         "const",
         "ref"
        ]
       }
      ],
      "endline" : 2580,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittestL2584_6",
    "kind" : "function",
    "comment" : "\n",
    "line" : 2584,
    "char" : 1,
    "endline" : 2598,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " Gives the previous power of two.\n Params:\n  x = a fixed size integer\n Returns:\n   The previous value before x that is a power of two, x itself if it's already a power of two, zero if x is 0.\n",
    "line" : 2599,
    "char" : 6,
    "name" : "truncPow2",
    "parameters" : [
     {
      "name" : "F",
      "kind" : "type"
     }
    ],
    "constraint" : "isFixedInt!F",
    "members" : [
     {
      "name" : "truncPow2",
      "kind" : "function",
      "line" : 2599,
      "char" : 6,
      "storageClass" : [
       "auto"
      ],
      "type" : "pure nothrow @nogc @safe (auto ref const F x)",
      "parameters" : [
       {
        "name" : "x",
        "type" : "F",
        "storageClass" : [
         "auto",
         "const",
         "ref"
        ]
       }
      ],
      "endline" : 2615,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittestL2618_7",
    "kind" : "function",
    "comment" : "\n",
    "line" : 2618,
    "char" : 1,
    "endline" : 2633,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " Gives the previous power of two.\n Params:\n  x = a fixed size integer\n Returns:\n   The previous value before x that is a power of two, x itself if it's already a power of two, zero if x is 0.\n",
    "line" : 2634,
    "char" : 6,
    "name" : "truncPow10",
    "parameters" : [
     {
      "name" : "F",
      "kind" : "type"
     }
    ],
    "constraint" : "isFixedInt!F",
    "members" : [
     {
      "name" : "truncPow10",
      "kind" : "function",
      "line" : 2634,
      "char" : 6,
      "storageClass" : [
       "auto"
      ],
      "type" : "pure nothrow @nogc @safe (auto ref const F x)",
      "parameters" : [
       {
        "name" : "x",
        "type" : "F",
        "storageClass" : [
         "auto",
         "const",
         "ref"
        ]
       }
      ],
      "endline" : 2671,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittestL2674_8",
    "kind" : "function",
    "comment" : "\n",
    "line" : 2674,
    "char" : 1,
    "endline" : 2682,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 2684,
    "char" : 1,
    "name" : "isSomeUnsigned",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : []
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 2696,
    "char" : 1,
    "name" : "isSomeSigned",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : []
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 2706,
    "char" : 3,
    "name" : "powerOf10",
    "parameters" : [
     {
      "name" : "F",
      "kind" : "type"
     }
    ],
    "constraint" : "isUnsignedFixedInt!F",
    "members" : [
     {
      "name" : "powerOf10",
      "kind" : "function",
      "line" : 2706,
      "char" : 3,
      "type" : "F(const uint p)",
      "parameters" : [
       {
        "name" : "p",
        "deco" : "k",
        "storageClass" : [
         "const"
        ]
       }
      ],
      "endline" : 2744,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n Detects whether T is a fixed integral type.\n Built-in integral types are not considered\n",
    "line" : 2752,
    "char" : 1,
    "name" : "isFixedInt",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "isFixedInt",
      "kind" : "variable",
      "line" : 2754,
      "char" : 10,
      "storageClass" : [
       "enum"
      ],
      "init" : "is(T : FixedInt!(bits, signed), uint bits, bool signed)"
     }
    ]
   },
   {
    "name" : "__unittestL2758_9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 2758,
    "char" : 1,
    "endline" : 2770,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : "\n Detects whether T is an unsigned fixed integral type.\n Built-in integral types are not considered\n",
    "line" : 2770,
    "char" : 1,
    "name" : "isUnsignedFixedInt",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "isUnsignedFixedInt",
      "kind" : "variable",
      "line" : 2772,
      "char" : 10,
      "storageClass" : [
       "enum"
      ],
      "init" : "is(T : FixedInt!(bits, signed), uint bits, bool signed = false)"
     }
    ]
   },
   {
    "name" : "__unittestL2776_10",
    "kind" : "function",
    "comment" : "\n",
    "line" : 2776,
    "char" : 1,
    "endline" : 2788,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : "\n Detects whether T is a signed fixed integral type.\n Built-in integral types are not considered\n",
    "line" : 2788,
    "char" : 1,
    "name" : "isSignedFixedInt",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "isSignedFixedInt",
      "kind" : "variable",
      "line" : 2790,
      "char" : 10,
      "storageClass" : [
       "enum"
      ],
      "init" : "is(T : FixedInt!(bits, signed), uint bits, bool signed = true)"
     }
    ]
   },
   {
    "name" : "__unittestL2794_11",
    "kind" : "function",
    "comment" : "\n",
    "line" : 2794,
    "char" : 1,
    "endline" : 2806,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : "\n Gets the corresponding unsigned fixed size integer for\n the specified type\n",
    "line" : 2806,
    "char" : 1,
    "name" : "UnsignedFixedInt",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "isFixedInt!T",
    "members" : []
   },
   {
    "name" : "__unittestL2815_12",
    "kind" : "function",
    "comment" : "\n",
    "line" : 2815,
    "char" : 1,
    "endline" : 2825,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " Gets the corresponding signed fixed size integer for\n the specified type\n",
    "line" : 2825,
    "char" : 1,
    "name" : "SignedFixedInt",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "isFixedInt!T",
    "members" : []
   },
   {
    "name" : "__unittestL2834_13",
    "kind" : "function",
    "comment" : "\n",
    "line" : 2834,
    "char" : 1,
    "endline" : 2846,
    "endchar" : 1
   }
  ]
 }
]